{
    "contents" : "#' Shapefiles to presence/absence matrix by folder location\n#' \n#' @author Bruno Vilela & Fabricio Villalobos\n#' \n#' @description Transform species shapefiles into a matrix of presence/absence (specially desinged for BirdLife output).\n#'\n#' @usage lets.presab.birds(path, xmn=-180, xmx=180, ymn=-90, ymx=90, resol=1, \n#' remove.cells=TRUE, remove.sp=TRUE, show.matrix=FALSE, \n#' crs=CRS(\"+proj=longlat +datum=WGS84\"), cover=0, presence=NULL, \n#' origin=NULL, seasonal=NULL)\n#' \n#' @param path Path location in which the folders with one or more individual species shapefiles.\n#' @param xmx Maximun longitude used to construct the grid of cells in which the matrix will be based. \n#' @param xmn Minimun longitude used to construct the grid of cells in which the matrix will be based.\n#' @param ymx Maximun latitude used to construct the grid of cells in which the matrix will be based. \n#' @param ymn Minimun latitude used to construct the grid of cells in which the matrix will be based.\n#' @param remove.cells If true, the final matrix will not contain cells in the grid with a value equal to zero.\n#' @param remove.sp If true, the final matrix will not contain species that do not match any cell in the grid.\n#' @param show.matrix if true, only the object matrix will be shown.\n#' @param crs the projection of the shapefiles.\n#' @param cover Porcentage of the cell covered by the shapefile that shall be considered for presence (values between 0 and 1).\n#' \n#' @return The result is an object of class PresenceAbsence with the following objects:\n#' @return Presence and Absence Matrix: A matrix of Presence(1) and Absence(0) with x (longitude) and y (latitude) of cells centroid;\n#' @return Richness Raster: A raster containing richness data;\n#' @return Species name: A vector with species names that are in the matrix.\n#' @return *But see the option argument show.matrix.\n#' \n#'  \n#' @details The function creates the matrix of presence/absence based on a raster file. Depending on the cell size, extension used and number of species it may require a lot of memmory, \n#'and may take some time to process it. Because of this, during the process we open a counting window so you can see in what polygon the function is working. Note that the number of \n#'polygons is not the same number of species that you have. Before run the function please check if the arguments are in the way you want.\n#' \n#' @seealso plot.PresenceAbsence\n#' @seealso lets.presab\n#' @seealso lets.shFilter\n#' \n#' @export\n\nlets.presab.birds <- function(path, xmn=-180, xmx=180, ymn=-90, \n                     ymx=90, resol=1, remove.cells=TRUE,\n                     remove.sp=TRUE, show.matrix=FALSE, \n                     crs=CRS(\"+proj=longlat +datum=WGS84\"),\n                     cover=0, presence=NULL, origin=NULL, seasonal=NULL){\n    \n  shapes <- list.files(path, pattern=\".shp\", full.names=T, recursive=T)\n  r <- raster(xmn=xmn, xmx=xmx, ymn=ymn, ymx=ymx, crs=crs)\n  res(r) <- resol\n  values(r) <- 0\n  valores <- values(r)\n  xy <- xyFromCell(r, 1:length(valores))\n  nomes <- numeric(length(shapes))\n  matriz <- matrix(0, nrow=nrow(xy), ncol=length(shapes))\n  matriz <- cbind(xy, matriz)\n  n <- length(shapes)\n  k <- 0\n  cat(\"This action may take some time...\\nWe will take the liberty to open a counting window so you can follow the progress...\")\n  \n  x11(2, 2, pointsize=12)\n  par(mar=c(0, 0, 0, 0))  \n  \n  for(j in 1:n){    \n    plot.new()\n    text(0.5, 0.5, paste(paste(\"Total:\", n, \"\\n\", \"Runs to go: \", (n-j))))      \n    valores2 <- valores\n    shp <- readShapePoly(shapes[j], delete_null_obj=TRUE, force_ring=T)\n    nomes[j] <- levels(shp$SCINAME)[1]\n    shp <- lets.shFilter(shp, presence=presence, origin=origin, seasonal=seasonal)\n    if(!is.null(shp)){  \n    k <- k+1\n    cell <- extract(r, shp, cellnumber=T, small=T, weights=T)        \n    cell2 <- do.call(rbind.data.frame, cell)\n    cell3 <- cell2[which(cell2[,3]>=cover), ]    \n    valores2[cell3[, 1]] <- 1\n    matriz[,(j+2)] <- valores2\n    }\n  }\n  \n  if(k==0){\n    dev.off()\n    stop(\"after filtering none species distribution left\")\n  }\n  \n  colnames(matriz) <- c(\"Longitude(x)\", \"Latitude(y)\", nomes)\n  \n  riqueza <- rowSums(as.matrix(matriz[,-c(1,2)]))  \n    \n  \n  if(remove.cells==TRUE){\n    matriz <- .removeCells(matriz)\n  }\n    \n  if(remove.sp==TRUE){\n    matriz <- .removeSp(matriz)\n  }\n  \n  dev.off()\n  cat(\"\\nThank you for your patience!\")\n\n  matriz <- .unicas(matriz)\n  \n  if(show.matrix==TRUE){\n    return(matriz)\n  }else{\n    values(r) <- riqueza\n    final <- list(\"Presence and Absence Matrix\"=matriz, \"Richness Raster\"=r, \n                  \"Species name\"=(colnames(matriz)[-(1:2)]))\n    class(final) <- \"PresenceAbsence\"\n    return(final)    \n}\n}\n\n\n\n",
    "created" : 1394565878834.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1250265904",
    "id" : "7A14C385",
    "lastKnownWriteTime" : 1394484687,
    "path" : "C:/Users/Bruno/SkyDrive/letsR/letsR/R/presab-birds.R",
    "project_path" : "R/presab-birds.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}