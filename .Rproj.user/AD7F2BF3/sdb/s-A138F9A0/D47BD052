{
    "contents" : "#' Shapefiles to presence/absence matrix\n#' \n#' @author Bruno Vilela & Fabricio Villalobos\n#' \n#' @description Transform species shapefiles into a matrix of presence/absence.\n#'\n#' @usage lets.presab(shapes, xmn=-180, xmx=180, ymn=-90, ymx=90, resol=1, \n#' remove.cells=TRUE, remove.sp=TRUE, show.matrix=FALSE, \n#' crs=CRS(\"+proj=longlat +datum=WGS84\"), cover=0, presence=NULL, \n#' origin=NULL, seasonal=NULL)\n#' \n#' @param shapes SpatialPolygonsDataFrame (see function readShapePoly to open these files) class object. Species name should be in a subclass called BINOMIAL or binomial.\n#' @param xmx Maximun longitude used to construct the grid of cells in which the matrix will be based. \n#' @param xmn Minimun longitude used to construct the grid of cells in which the matrix will be based.\n#' @param ymx Maximun latitude used to construct the grid of cells in which the matrix will be based. \n#' @param ymn Minimun latitude used to construct the grid of cells in which the matrix will be based.\n#' @param remove.cells If true, the final matrix will not contain cells in the grid with a value equal to zero.\n#' @param remove.sp If true, the final matrix will not contain species that do not match any cell in the grid.\n#' @param show.matrix if true, only the object matrix will be shown.\n#' @param crs the projection of the shapefiles.\n#' @param cover Porcentage of the cell covered by the shapefile that shall be considered for presence (values between 0 and 1).\n#' \n#' @return The result is an object of class PresenceAbsence with the following objects:\n#' @return Presence and Absence Matrix: A matrix of Presence(1) and Absence(0) with x (longitude) and y (latitude) of cells centroid;\n#' @return Richness Raster: A raster containing richness data;\n#' @return Species name: A vector with species names that are in the matrix.\n#' @return *But see the option argument show.matrix.\n#' \n#'  \n#' @details The function creates the matrix of presence/absence based on a raster file. Depending on the cell size, extension used and number of species it may require a lot of memmory, \n#'and may take some time to process it. Because of this, during the process we open a counting window so you can see in what polygon the function is working. Note that the number of \n#'polygons is not the same number of species that you have. Before run the function please check if the arguments are in the way you want.\n#' \n#' @seealso plot.PresenceAbsence\n#' @seealso lets.presab.birds\n#' @seealso lets.shFilter\n#' \n#' @import raster\n#' @import maptools\n#' @import maps\n#' \n#' @export\n\nlets.presab <- function(shapes, xmn=-180, xmx=180, ymn=-90, \n                   ymx=90, resol=1, remove.cells=TRUE, \n                   remove.sp=TRUE, show.matrix=FALSE, \n                   crs=CRS(\"+proj=longlat +datum=WGS84\"),\n                   cover=0, presence=NULL, origin=NULL, seasonal=NULL){\n  \n  \n  shapes <- lets.shFilter(shapes, presence=presence, origin=origin, seasonal=seasonal)\n  \n  if(is.null(shapes)){\n    stop(\"after filtering none species distribution left\")\n  }\n  \n  ras <- raster(xmn=xmn, xmx=xmx, ymn=ymn, ymx=ymx, crs=crs)\n  res(ras) <- resol\n  values(ras) <- 1\n  coord <- xyFromCell(ras, 1:length(values(ras)))\n  colnames(coord) <- c(\"Longitude(x)\", \"Latitude(y)\")\n  \n  if(any(names(shapes)==\"BINOMIAL\")){  \n    nomes <- levels(shapes$BINOMIAL)\n    n <- length(shapes$BINOMIAL)\n    nomes2 <- shapes$BINOMIAL\n  }\n  \n  if(any(names(shapes)==\"binomial\")){  \n    nomes <- levels(shapes$binomial)\n    n <- length(shapes$binomial)\n    nomes2 <- shapes$binomial\n  }\n  \n  matriz <- matrix(0, ncol=length(nomes), nrow=length(values(ras)))\n  colnames(matriz) <- nomes\n  \n  \n  cat(\"This action may take some time...\\nWe will take the liberty to open a counting window so you can follow the progress...\")\n  \n  x11(2, 2, pointsize = 12)\n  par(mar=c(0, 0, 0, 0))\n  \n  for(i in 1:n){\n    plot.new()\n    text(0.5, 0.5, paste(paste(\"Total:\", n, \"\\n\",\"Runs to go: \", (n-i))))\n    celulas <- extract(ras, SpatialPolygons(list(shapes@polygons[[i]])), cellnumbers=T, weights=T, small=T)\n    \n    pos <- which(nomes2[i]==nomes)\n    \n    pos2 <- do.call(rbind.data.frame, celulas)\n    pos2 <- pos2[which(pos2[,3]>=cover), ]\n    matriz[pos2[, 1], pos] <- 1\n  }\n  cbind(coord,matriz)->Resultado\n  if(remove.cells==TRUE){\n    Resultado <- .removeCells(Resultado)\n  }\n  if(remove.sp==TRUE){\n    Resultado <- .removeSp(Resultado)\n  }\n  dev.off()\n  cat(\"\\nThank you for your patience!\")\n  if(show.matrix==TRUE){\n    return(Resultado)\n  }else{\n    values(ras) <- rowSums(matriz)\n    final <- list(\"Presence and Absence Matrix\"=Resultado, \"Richness Raster\"=ras, \n                  \"Species name\"=colnames(Resultado[,-(1:2)]))\n    class(final) <- \"PresenceAbsence\"\n    return(final)\n  }\n}\n",
    "created" : 1394845636920.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2516520062",
    "id" : "D47BD052",
    "lastKnownWriteTime" : 1394483022,
    "path" : "C:/Users/Bruno/SkyDrive/letsR/letsR/R/presab.R",
    "project_path" : "R/presab.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}