{
    "contents" : "#' Download habitat information from IUCN\n#' \n#' @author Bruno Vilela\n#' \n#' @description return sepecies historic status information from IUCN website from one or more \n#' species names, or from an object of the PresenceAbsence class.\n#' \n#' @usage lets.iucn.his(input)\n#' \n#' @param input character vector with one or more species names,\n#' or an object of the PresenceAbsence class.\n#' \n#' @return A data frame with the species names in the rows and the years (1980 - 2014) in the columns, \n#' the code represents the conservation status of the species (see IUCN website for details).\n#' NE = Not evaluated.\n#' \n#' @details Depending on your internet conection and the number of species, the function \n#' may take some time. So, we open a count window where you can follow the progress.\n#' Note that the internet must be turned on during all the process. \n#' \n#' @import XML\n#' \n#' @seealso lets.iucn\n#' @seealso lets.iucn.ha\n#' \n#' \n#' @export\n\n\nlets.iucn.his <- function(input){  \n  \n  if(class(input)==\"PresenceAbsence\"){\n    input <- input$S\n  }\n  \n  resus <- c()\n  n <- length(input)\n\n  cat(\"This action may take some time...\\nWe will take the liberty to open a counting window so you can follow the progress...\")\n  \n  x11(2, 2, pointsize=12)\n  par(mar=c(0, 0, 0, 0))  \n    \n  for(i in 1:n){    \n\n    plot.new()\n    text(0.5, 0.5, paste(paste(\"Total:\", n, \"\\n\", \"Runs to go: \", (n-i))))      \n    \n    resu <- Hist(input[i])\n    resus <- rbind(resus, resu)\n  }   \n  \n  dev.off()\n  cat(\"\\nThank you for your patience!\")\n  return(as.data.frame(resus))\n}\n\n\n\n###\nHist <- function(input){\n  \n  input <- gsub(as.matrix(input), patt=\" \", replace=\"-\")\n  h2 <- try(htmlParse(paste(\"http://api.iucnredlist.org/go/\",input, sep = \"\")),silent=TRUE)\n  b <- try(xpathSApply(h2, '//div', xmlValue),silent=TRUE)[1]\n  c <- as.numeric(gsub(\"\\\\D\", \"\", b))\n  \n  ano1 <- try(xpathSApply(h2, '//div[@id=\"modified_year\"]', xmlValue), silent=TRUE)\n  ameaca1 <- try(xpathSApply(h2, '//div[@id=\"red_list_category_code\"]', xmlValue), silent=T)\n  anos <- 1980:2014\n  matriz <- matrix(ncol=length(anos))\n  colnames(matriz) <- anos\n  matriz[, ] <- \"NE\"\n  \n  h <- try(htmlParse(paste(\"http://www.iucnredlist.org/details/full/\", c, \"/0\", sep = \"\")), silent=TRUE)\n  a <- try(xpathSApply(h, '//td[table]', xmlValue),silent=T)\n  a <- a[2]\n  a <- gsub(\"\\n\", \"\", a)\n  a <- gsub(\"\\t\", \"\", a)\n  b <- strsplit(a, \"          \")[[1]]\n  b <- strsplit(b, \"      \")\n  c <- do.call(\"rbind\", b)\n  c <- matrix(c, ncol=1)\n  c <- c[-which(duplicated(c)), ]\n  ano <- substr(gsub(\"\\\\D\", \"\", c), 1, 4)\n  \n  if(length(ano)>=1){\n    d <- gsub(\"[0-9]\", \"\", c)\n    d <- gsub(\"[[:punct:]]\", \"\", d)\n    d2 <- gsub(\"\\\\W\", \"\", d)\n    \n    EX <- grep(\"Extinct\", d2)\n    EW <- grep(\"ExtinctintheWild\", d2)\n    VU <- grep(\"Vulnerable\", d2)\n    EN <- grep(\"Endangered\", d2)\n    CR <- grep(\"CriticallyEndangered\", d2)\n    LC <- grep(\"LeastConcern\", d2)\n    NT <- grep(\"NearThreatened\", d2)\n    DD <- grep(\"DataDeficient\", d2)\n    CT <- grep(\"CommerciallyThreatened\", d2)\n    IN <- grep(\"Indeterminate\", d2)\n    IK <- grep(\"InsufficientlyKnown\", d2)\n    LR <- grep(\"LowerRisk\", d2)\n    RA <- grep(\"Rare\", d2)\n    \n    ameaca <- numeric(length(ano))\n    \n    ameaca[EX] <- \"EX\"\n    ameaca[EW] <- \"EW\"\n    ameaca[VU] <- \"VU\"\n    ameaca[EN] <- \"EN\"\n    ameaca[CR] <- \"CR\"\n    ameaca[LC] <- \"LC\"\n    ameaca[NT] <- \"NT\"\n    ameaca[IK] <- \"IK\"\n    ameaca[DD] <- \"DD\"\n    ameaca[IN] <- \"IN\"\n    ameaca[RA] <- \"RA\"\n    ameaca[CT] <- \"CT\"\n    ameaca[LR] <- \"LR\"\n    \n    ameaca <- ameaca[which(!(duplicated(ano)))]\n    ano <- ano[which(!(duplicated(ano)))]\n    \n    for(i in 1:length(ano)){      \n      matriz[anos%in%ano[i]] <- ameaca[i]  \n    }\n    \n    ameaca <- c(ameaca, ameaca1)\n    ano <- c(ano, ano1)\n    ameaca <- ameaca[which(!(duplicated(ano)))]\n    ano <- ano[which(!(duplicated(ano)))]        \n    pos <- which(anos%in%ano)\n    pos2 <- sort(ano, index.return=T)$ix\n    ameaca <- ameaca[pos2]\n    \n    for(i in 1:(length(ameaca)-1)){\n      matriz[seq(from=(pos[i]+1),(pos[i+1]-1))] <- ameaca[i]\n    }\n  }\n  if(ano1%in%anos){\n    pos3 <- which(anos%in%ano1)\n    matriz[pos3:ncol(matriz)] <- ameaca1\n  }\n  Species <- gsub(as.matrix(input), patt=\"-\", replace=\" \")\n  matriz <- cbind(Species, matriz)\n  colnames(matriz)[1] <- \"Species\"\n  return(matriz)\n}\n\n\n",
    "created" : 1394462558973.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3338586673",
    "id" : "3C103447",
    "lastKnownWriteTime" : 1394468995,
    "path" : "C:/Users/Bruno/SkyDrive/letsR/letsR/R/historic.R",
    "project_path" : "R/historic.R",
    "properties" : {
        "tempName" : "Untitled3"
    },
    "source_on_save" : false,
    "type" : "r_source"
}