activeEnvironmentName="R_GlobalEnv"
build-last-errors="[]"
build-last-errors-base-dir="C:/Users/Bruno/SkyDrive/letsR/letsR/"
build-last-outputs="[{\"output\":\"==> roxygenize('.', roclets=c('rd', 'collate', 'namespace'))\\n\\n\",\"type\":0},{\"output\":\"* checking for changes ... \",\"type\":1},{\"output\":\"DONE\\n\",\"type\":1},{\"output\":\"Writing lets.iucn.Rd\\n\\n\",\"type\":1},{\"output\":\"==> Rcmd.exe INSTALL --no-multiarch --with-keep.source letsR\\n\\n\",\"type\":0},{\"output\":\"* installing to library 'C:/Users/Bruno/Documents/R/win-library/3.0'\\r\\n\",\"type\":1},{\"output\":\"* installing *source* package 'letsR' ...\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"Aviso em .write_description(db, file.path(outDir, \\\"DESCRIPTION\\\")) :\\r\\n\",\"type\":1},{\"output\":\"  Unknown encoding with non-ASCII data: converting to ASCII\\r\\n\",\"type\":1},{\"output\":\"** R\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** data\\r\\n\",\"type\":1},{\"output\":\"** preparing package for lazy loading\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** help\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"Aviso: C:/Users/Bruno/SkyDrive/letsR/letsR/man/letsR-package.Rd:32: All text must be in a section\\r\\n\",\"type\":1},{\"output\":\"Aviso: C:/Users/Bruno/SkyDrive/letsR/letsR/man/letsR-package.Rd:33: All text must be in a section\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"*** installing help indices\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** building package indices\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** testing if installed package can be loaded\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"* DONE (letsR)\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1}]"
compile_pdf_state="{\"errors\":[],\"output\":\"\",\"running\":false,\"tab_visible\":false,\"target_file\":\"\"}"
console_procs="[]"
files.monitored-path=""
find-in-files-state="{\"handle\":\"\",\"input\":\"\",\"path\":\"\",\"regex\":true,\"results\":{\"file\":[],\"line\":[],\"lineValue\":[],\"matchOff\":[],\"matchOn\":[]},\"running\":false}"
imageDirtyState="1"
saveActionState="-1"
