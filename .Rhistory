data(Phyllomedusa)
rangesize <- lets.rangesize(x = Phyllomedusa,
coordinates = "geographic")
# SpatialPolygonsDataFrame & planar
rangesize2 <- lets.rangesize(x = Phyllomedusa,
coordinates = "planar")
# PresenceAbsence & cell
data(PAM)
rangesize3 <- lets.rangesize(x = PAM,
units = "cell")
# PresenceAbsence & squaremeter
rangesize4 <- lets.rangesize(x = PAM,
units = "squaremeter")
plot(rangesize[, 1], rangesize2[, 1])
plot(rangesize[, 1], rangesize3[, 1])
plot(rangesize[, 1], rangesize4[, 1])
plot(rangesize3[, 1], rangesize4[, 1])
rangesize
class(rangesize)
expect_error(lets.rangesize(x = Phyllomedusa, coordinates = "cells"))
library(letsR)
library(letsR)
data(PAM)
data(Phyllomedusa)
resu_test <- lets.rangesize(x = Phyllomedusa,
coordinates = "geographic")
expect_equal(class(resu_test), "data.frame")
expect_true(ncol(resu_test) == 2)
expect_true(!any(is.na(resu_test)))
resu_test <- lets.rangesize(x = Phyllomedusa,
coordinates = "planar")
expect_equal(class(resu_test), "data.frame")
expect_true(ncol(resu_test) == 2)
expect_true(!any(is.na(resu_test)))
resu_test
ncol(resu_test)
class(resu_test)
resu_test <- lets.rangesize(x = PAM,
units = "squaremeter")
library(testthat)
resu_test <- lets.rangesize(x = Phyllomedusa,
coordinates = "geographic")
expect_equal(class(resu_test), "data.frame")
expect_true(ncol(resu_test) == 2)
expect_true(!any(is.na(resu_test)))
resu_test <- lets.rangesize(x = Phyllomedusa,
coordinates = "planar")
expect_equal(class(resu_test), "data.frame")
expect_true(ncol(resu_test) == 2)
expect_true(!any(is.na(resu_test)))
resu_test
resu_test <- lets.rangesize(x = PAM,
units = "squaremeter")
expect_equal(class(resu_test), "data.frame")
expect_true(ncol(resu_test) == 2)
expect_true(!any(is.na(resu_test)))
head(resu_test)
library(letsR)
library(letsR)
balls <- read.table("C:/Users/Bruno/Desktop/dobrol/balls.txt")
head(balls)
balls <- read.table("C:/Users/Bruno/Desktop/dobrol/balls.txt", header = TRUE)
model <- glm(col ~ rug + siz + rug*siz, data = balls, family = "binomial")
model
summary(model)
plot(rug)
plot(model)
summary(model)
plot(col ~ rug + siz + rug*siz)
plot(col ~ rug + siz + rug*siz, data = balls)
plot(col ~ rug, data = balls)
plot(as.factor(col) ~ as.factor(rug), data = balls)
barplot(as.factor(col) ~ as.factor(rug), data = balls)
barplot(as.factor(col) ~ as.factor(rug), data = balls)
barplot(~as.factor(col) + as.factor(rug), data = balls)
plot(~as.factor(col) + as.factor(rug), data = balls)
hist(~as.factor(col) + as.factor(rug), data = balls)
histogram(~as.factor(col) + as.factor(rug), data = balls)
library(lattice)
histogram(~as.factor(col) + as.factor(rug), data = balls)
as.factor(rug)
histogram(~as.factor(col) + as.factor(rug), data = balls, col = c("gray", "black"))
histogram(as.factor(col) ~ as.factor(rug), data = balls, col = c("gray", "black"))
densityplot(as.factor(col) ~ as.factor(rug), data = balls, col = c("gray", "black"))
histogram
histogram(as.factor(col) ~ as.factor(rug), data = balls, col = c("gray", "black"))
plot(as.factor(col) ~ as.factor(rug), data = balls, col = c("gray", "black"))
plot(as.factor(col) ~ as.factor(rug), data = balls, col = c("gray", "black"),
ylab = "Color", ylab = "Rugosity")
plot(as.factor(col) ~ as.factor(rug), data = balls, col = c("gray", "black"),
ylab = "Color", xlab = "Rugosity")
histogram(as.factor(col) ~ as.factor(rug), data = balls, col = c("gray", "black"),
ylab = "Color", xlab = "Rugosity")
plot(as.factor(col) ~ as.factor(rug), data = balls, col = c("gray", "black"),
ylab = "Color", xlab = "Rugosity")
histogram(as.factor(col) ~ as.factor(rug), data = balls, col = c("gray", "black"),
ylab = "Color", xlab = "Rugosity")
histogram(as.factor(col) ~ as.factor(rug), data = balls, col = c("gray", "black"),
ylab = "Porcentage of black", xlab = "Rugosity")
histogram(as.factor(col) ~ ifelse(rug == 1, "yes", "no"), data = balls, col = c("gray", "black"),
ylab = "Porcentage of black", xlab = "Rugosity")
histogram(as.factor(balls$col) ~ ifelse(balls$rug == 1, "yes", "no"), col = c("gray", "black"),
ylab = "Porcentage of black", xlab = "Rugosity")
histogram(as.factor(balls$col) ~ as.factor(ifelse(balls$rug == 1, "yes", "no")), col = c("gray", "black"),
ylab = "Porcentage of black", xlab = "Rugosity")
histogram(as.factor(balls$col) ~ as.factor(ifelse(balls$rug == 1, "Yes", "No")),
col = c("gray", "black"),
ylab = "Porcentage of black",
xlab = "Rugosity")
histogram(as.factor(balls$col) ~ as.factor(ifelse(balls$rug == 1, "Yes", "No")),
col = c("gray", "black"),
ylab = "Porcentage of black",
xlab = "Rugosity",
bty = "l")
histogram(as.factor(balls$col) ~ as.factor(ifelse(balls$rug == 1, "Yes", "No")),
col = c("gray", "black"),
ylab = "Porcentage of black",
xlab = "Rugosity",
bty = "l",
type = "percent")
histogram(as.factor(balls$col) ~ as.factor(ifelse(balls$rug == 1, "Yes", "No")),
col = c("gray", "black"),
ylab = "Porcentage of black",
xlab = "Rugosity",
bty = "l",
type = "count")
histogram(as.factor(balls$col) ~ as.factor(ifelse(balls$rug == 1, "Yes", "No")),
col = c("gray", "black"),
ylab = "Porcentage of black",
xlab = "Rugosity",
outer = FALSE,
type = "percentage")
histogram(as.factor(balls$col) ~ as.factor(ifelse(balls$rug == 1, "Yes", "No")),
col = c("gray", "black"),
ylab = "Porcentage of black",
xlab = "Rugosity",
outer = FALSE,
type = "percent")
histogram(as.factor(balls$col) ~ as.factor(ifelse(balls$rug == 1, "Yes", "No")),
col = c("gray", "black"),
ylab = "Porcentage of black",
xlab = "Rugosity",
outer = TRUE,
type = "percent")
plot(as.factor(col) ~ siz),
plot(as.factor(col) ~ siz, data = balls)
plot(col ~ siz, data = balls)
curve(predict(model, data.frame(siz = x), type = "resp"),add=TRUE)
model2 <- glm(col ~ siz, data = balls, family = "binomial")
curve(predict(model2, data.frame(siz = x), type = "resp"), add = TRUE)
plot(as.factor(col) ~ siz, data = balls)
balls$rug <- as.factor(ifelse(balls$rug == 1, "Yes", "No"))
balls$col <- as.factor(ifelse(balls$col == 1, "Black", "Other"))
balls$rug <- as.factor(ifelse(balls$rug == 1, "Yes", "No"))
balls$rug <- as.factor(ifelse(balls$rug == 1, "Yes", "No"))
balls$col <- as.factor(ifelse(balls$col == 1, "Black", "Other"))
library(lattice)
histogram(col ~ rug, data = balls,
col = c("gray", "black"),
ylab = "Porcentage of black",
xlab = "Rugosity",
type = "percent")
balls$rug <- as.factor(ifelse(balls$rug == 1, "Yes", "No"))
balls$rug
balls <- read.table("C:/Users/Bruno/Desktop/dobrol/balls.txt", header = TRUE)
balls$rug <- as.factor(ifelse(balls$rug == 1, "Yes", "No"))
balls$rug
balls$col <- as.factor(ifelse(balls$col == 1, "Black", "Other"))
balls$col
library(lattice)
histogram(col ~ rug, data = balls,
col = c("gray", "black"),
ylab = "Porcentage of black",
xlab = "Rugosity",
type = "percent")
plot(col ~ siz, data = balls)
model <- glm(col ~ rug + siz + rug*siz, data = balls, family = "binomial")
summary(model)
histogram(col ~ rug, data = balls,
col = c("gray", "black"),
ylab = "Porcentage of black",
xlab = "Rugosity",
type = "percent")
histogram(col ~ rug, data = balls,
ylab = "Porcentage of black",
xlab = "Rugosity",
type = "percent")
histogram(col ~ rug, data = balls,
ylab = "Porcentage of black",
xlab = "Rugosity",
type = "percent",
col = "black")
plot(col ~ siz, data = balls)
plot(col ~ siz, data = balls, xlab = "size")
plot(col ~ siz, data = balls, xlab = "size", ylab = "")
x11()
plot(col ~ siz, data = balls, xlab = "size", ylab = "")
# Check the plots
library(lattice)
histogram(col ~ rug, data = balls,
ylab = "Porcentage of black",
xlab = "Rugosity",
type = "percent",
col = "black")
x11()
plot(col ~ siz, data = balls, xlab = "size", ylab = "")
plot(col ~ siz, data = balls, xlab = "size", ylab = "", border = "white")
plot(col ~ siz, data = balls, xlab = "size", ylab = "", border = "ligth gray")
plot(col ~ siz, data = balls, xlab = "size", ylab = "", border = "ligthgray")
plot(col ~ siz, data = balls, xlab = "size", ylab = "", border = "white")
x11()
plot(col ~ siz, data = balls, xlab = "size", ylab = "", border = "white")
histogram(col ~ rug, data = balls,
ylab = "Porcentage of black",
xlab = "Rugosity",
type = "percent",
col = "black",
border = "gray")
histogram(col ~ rug, data = balls,
ylab = "Porcentage of black",
xlab = "Rugosity",
type = "percent",
col = "gray",
border = "black")
plot(col ~ siz + rug, data = balls, xlab = "size", ylab = "", border = "white")
plot(col ~ siz + rug, data = balls, xlab = "size", ylab = "", border = "white")
balls <- read.table("C:/Users/Bruno/Desktop/dobrol/balls.txt", header = TRUE)
balls$rug <- as.factor(ifelse(balls$rug == 1, "Yes", "No"))
plot(col ~ siz, data = balls, col = balls$rug, xlab = "size", ylab = "", border = "white")
plot(col ~ siz, data = balls, col = balls$rug, xlab = "size", ylab = "Color", border = "white")
?par
plot(col ~ siz, data = balls, xlab = "size", ylab = "", border = "white")
plot(col ~ siz, data = balls, col = balls$rug, xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
plot(col ~ siz, data = balls, col = balls$rug, xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1), alpha = 0.8)
?par
plot(col ~ siz, data = balls, col = makeTransparent(balls$rug), xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.5), xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
??alpha
library(scales)
x11()
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.5), xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
x11()
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.5), xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
balls <- read.table("C:/Users/Bruno/Desktop/dobrol/balls.txt", header = TRUE)
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.5), xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
balls$rug <- ifelse(balls$rug ==0, 2, 1)
balls$rug <- ifelse(balls$rug ==0, "blue", "red")
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.5), xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
x11()
balls$rug <- ifelse(balls$rug ==0, "blue", "red")
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.5), xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
balls <- read.table("C:/Users/Bruno/Desktop/dobrol/balls.txt", header = TRUE)
model <- glm(col ~ rug + siz + rug*siz, data = balls, family = "binomial")
summary(model)
# Check the plots
library(scales)
x11()
balls$rug <- ifelse(balls$rug ==0, "blue", "red")
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.5), xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
curve(predict(model, type="resp"),add=TRUE)
predict(model)
curve(predict(model), add=TRUE)
predict(model, type="resp")
curve(predict(model, data.frame(siz = x), type="resp"), add=TRUE)
curve(predict(model, balls$siz, type="resp"), add=TRUE)
predict(model, balls$siz, type="resp")
balls$siz
curve(y = predict(model, type="resp"), x = balls$siz, add=TRUE)
plot(y = predict(model, type="resp"), x = balls$siz, add=TRUE)
plot(y = predict(model, type="resp"), x = balls$siz)
predict(model, type="resp")
class(predict(model, type="resp"))
dim(predict(model, type="resp"))
points(y = predict(model, type="resp"), x = balls$siz, col = "blue")
points(y = predict(model, type="resp"), x = balls$siz, col = ("blue", "red"))
points(y = pred[1:(length(pred)/2)], x = balls$siz, col = ("blue"))
pred <- predict(model, type="resp")
points(y = pred[1:(length(pred)/2)], x = balls$siz, col = ("blue"))
points(y = pred[1:met], x = balls$siz[1:met], col = ("blue"))
met <- (length(pred)/2)
points(y = pred[1:met], x = balls$siz[1:met], col = ("blue"))
met <- (length(pred)/2)
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.5), xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
met <- (length(pred)/2)
points(y = pred[1:met], x = balls$siz[1:met], col = ("blue"))
points(y = pred[1:met], x = balls$siz[1:met], pch = 2)
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.5), xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
points(y = pred, x = balls$siz, pch = 2)
points(y = pred, x = balls$siz, pch = 20, cex = 2)
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.5), xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
points(y = pred, x = balls$siz, pch = 20, type = "l")
points(y = pred, x = balls$siz, pch = 20, cex = 0.5)
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.5), xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
points(y = pred, x = balls$siz, pch = 20, cex = 0.5)
pred
colors2 <- pred[pred > 0.5]
colors2 <- ifelse(colors2, "red", "blue")
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.5), xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
points(y = pred, x = balls$siz, pch = 20, cex = 0.5, col = )
points(y = pred, x = balls$siz, pch = 20, cex = 0.5, col = colors2)
colors2 <- pred > 0.5
colors2 <- ifelse(colors2, "red", "blue")
points(y = pred, x = balls$siz, pch = 20, cex = 0.5, col = colors2)
?legend
legend()
legend("top")
legend("top", c("Rugose","Not rugose"))
legend("topright", legends = c("Rugose","Not rugose"))
legend("topright", legends = c("Rugose","Not rugose"), pch = 1, col = c("blue", "red"))
# Blue = Não rugoso, Red = rugoso
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.5), xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
points(y = pred, x = balls$siz, pch = 20, cex = 0.5, col = colors2)
legend("center", legends = c("Rugose","Not rugose"), pch = 1, col = c("blue", "red"))
legend("center",c("Rugose","Not rugose"), pch = 1, col = c("blue", "red"))
# Blue = Não rugoso, Red = rugoso
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.5), xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
points(y = pred, x = balls$siz, pch = 20, cex = 0.5, col = colors2)
legend("center",c("Rough","Smooth"), pch = 1, col = c("blue", "red"))
legend("center",c("Rough","Smooth", "Rough (predict)", "Smooth (predict)"),
pch = c(1, 1, 20, 20), col = c("blue", "red"))
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.5), xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
points(y = pred, x = balls$siz, pch = 20, cex = 0.5, col = colors2)
legend("center",c("Rough","Smooth", "Rough (predict)", "Smooth (predict)"),
pch = c(1, 1, 20, 20), col = c("red", "blue"))
library(scales)
x11()
balls$rug <- ifelse(balls$rug == 0, "blue", "red")
pred <- predict(model, type="resp")
colors2 <- pred > 0.8
colors2 <- ifelse(colors2, "red", "blue")
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.5), xlab = "size",
ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
points(y = pred, x = balls$siz, pch = 20, cex = 0.5, col = colors2)
legend("center",c("Rough","Smooth", "Rough (predict)", "Smooth (predict)"),
pch = c(1, 1, 20, 20), col = c("red", "blue"))
setwd("C:/Users/Bruno/Desktop/dobrol")
balls <- read.table("balls.txt", header = TRUE)
model <- glm(col ~ rug + siz + rug*siz, data = balls, family = "binomial")
summary(model)
# Check the plots
library(scales)
x11()
balls$rug <- ifelse(balls$rug == 0, "blue", "red")
pred <- predict(model, type="resp")
colors2 <- pred > 0.8
colors2 <- ifelse(colors2, "red", "blue")
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.5), xlab = "size",
ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
points(y = pred, x = balls$siz, pch = 20, cex = 0.5, col = colors2)
legend("center",c("Rough","Smooth", "Rough (predict)", "Smooth (predict)"),
pch = c(1, 1, 20, 20), col = c("red", "blue"))
balls <- read.table("balls.txt", header = TRUE)
model <- glm(col ~ rug + siz + rug*siz, data = balls, family = "binomial")
summary(model)
# Check the plots
library(scales)
x11()
balls$rug <- ifelse(balls$rug == 0, "blue", "red")
pred <- predict(model, type="resp")
colors2 <- pred > 0.5
colors2 <- ifelse(colors2, "red", "blue")
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.8), xlab = "size",
ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
points(y = pred, x = balls$siz, pch = 20, cex = 0.5, col = colors2)
legend("center",c("Rough","Smooth", "Rough (predict)", "Smooth (predict)"),
pch = c(1, 1, 20, 20), col = c("red", "blue"))
balls <- read.table("balls.txt", header = TRUE)
model <- glm(col ~ rug + siz + rug*siz, data = balls, family = "binomial")
summary(model)
# Check the plots
library(scales)
x11()
balls$rug <- ifelse(balls$rug == 0, "darkgoldenrod2", "red")
pred <- predict(model, type="resp")
colors2 <- pred > 0.5
colors2 <- ifelse(colors2, "red", "darkgoldenrod2")
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.8), xlab = "size",
ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
points(y = pred, x = balls$siz, pch = 20, cex = 0.5, col = colors2)
legend("center",c("Rough","Smooth", "Rough (predict)", "Smooth (predict)"),
pch = c(1, 1, 20, 20), col = c("red", "darkgoldenrod2"))
balls <- read.table("balls.txt", header = TRUE)
model <- glm(col ~ rug + siz + rug*siz, data = balls, family = "binomial")
summary(model)
# Check the plots
library(scales)
x11()
balls$rug <- ifelse(balls$rug == 0, "darkgoldenrod2", "darkgreen")
pdarkgreen <- pdarkgreenict(model, type="resp")
colors2 <- pdarkgreen > 0.5
colors2 <- ifelse(colors2, "darkgreen", "darkgoldenrod2")
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.8), xlab = "size",
ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
points(y = pdarkgreen, x = balls$siz, pch = 20, cex = 0.5, col = colors2)
legend("center",c("Rough","Smooth", "Rough (pdarkgreenict)", "Smooth (pdarkgreenict)"),
pch = c(1, 1, 20, 20), col = c("darkgreen", "darkgoldenrod2"))
balls <- read.table("balls.txt", header = TRUE)
model <- glm(col ~ rug + siz + rug*siz, data = balls, family = "binomial")
summary(model)
# Check the plots
library(scales)
x11()
balls$rug <- ifelse(balls$rug == 0, "darkgoldenrod2", "darkgreen")
pdarkgreen <- pdarkgreenict(model, type="resp")
colors2 <- pdarkgreen > 0.5
colors2 <- ifelse(colors2, "darkgreen", "darkgoldenrod2")
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.8), xlab = "size",
ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
points(y = pdarkgreen, x = balls$siz, pch = 20, cex = 0.5, col = colors2)
legend("center",c("Rough","Smooth", "Rough (pdarkgreenict)", "Smooth (pdarkgreenict)"),
pch = c(1, 1, 20, 20), col = c("darkgreen", "darkgoldenrod2"))
balls <- read.table("balls.txt", header = TRUE)
model <- glm(col ~ rug + siz + rug*siz, data = balls, family = "binomial")
summary(model)
# Check the plots
library(scales)
x11()
balls$rug <- ifelse(balls$rug == 0, "darkgoldenrod2", "darkgreen")
pred <- predict(model, type="resp")
colors2 <- pred > 0.5
colors2 <- ifelse(colors2, "darkgreen", "darkgoldenrod2")
plot(col ~ siz, data = balls, col = alpha(balls$rug, 0.8), xlab = "size",
ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
points(y = pred, x = balls$siz, pch = 20, cex = 0.5, col = colors2)
legend("center",c("Rough","Smooth", "Rough (predict)", "Smooth (predict)"),
pch = c(1, 1, 20, 20), col = c("darkgreen", "darkgoldenrod2"))
summary(model)
model <- glm(as.factor(col) ~ as.factor(rug) + siz + rug*siz,
data = balls, family = "binomial")
summary(model)
balls <- read.table("balls.txt", header = TRUE)
model <- glm(as.factor(col) ~ as.factor(rug) + siz + rug*siz,
data = balls, family = "binomial")
# Model result
summary(model)
# Check the plots
library(scales)
x11()
colors1 <- ifelse(balls$rug == 0, "darkgoldenrod2", "darkgreen")
pred <- predict(model, type="resp")
colors2 <- pred > 0.5
colors2 <- ifelse(colors2, "darkgreen", "darkgoldenrod2")
plot(col ~ siz, data = balls, col = alpha(colors1, 0.8),
xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
points(y = pred, x = balls$siz, pch = 20, cex = 0.5, col = colors2)
legend("center",c("Rough","Smooth", "Rough (predict)", "Smooth (predict)"),
pch = c(1, 1, 20, 20), col = c("darkgreen", "darkgoldenrod2"))
model <- glm(as.factor(col) ~ as.factor(rug)*siz,
data = balls, family = "binomial")
# Model result
summary(model)
model <- glm(col ~ rug*siz, data = balls, family = "binomial")
summary(model)
# Check the plots
library(scales)
x11()
colors1 <- ifelse(balls$rug == 0, "darkgoldenrod2", "darkgreen")
pred <- predict(model, type="resp")
colors2 <- pred > 0.5
colors2 <- ifelse(colors2, "darkgreen", "darkgoldenrod2")
plot(col ~ siz, data = balls, col = alpha(colors1, 0.8),
xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
points(y = pred, x = balls$siz, pch = 20, cex = 0.5, col = colors2)
legend("center",c("Rough","Smooth", "Rough (predict)", "Smooth (predict)"),
pch = c(1, 1, 20, 20), col = c("darkgreen", "darkgoldenrod2"))
balls <- read.table("balls.txt", header = TRUE)
setwd("C:/Users/Bruno/Desktop/dobrol")
balls <- read.table("balls.txt", header = TRUE)
model <- glm(col ~ rug*siz, data = balls, family = "binomial")
# Model result
summary(model)
# Check the plots
library(scales)
x11()
colors1 <- ifelse(balls$rug == 0, "darkgoldenrod2", "darkgreen")
pred <- predict(model, type="resp")
colors2 <- pred > 0.5
colors2 <- ifelse(colors2, "darkgreen", "darkgoldenrod2")
plot(col ~ siz, data = balls, col = alpha(colors1, 0.8),
xlab = "size", ylab = "Color", border = "white",
yaxp = c(0, 1, 1))
points(y = pred, x = balls$siz, pch = 20, cex = 0.5, col = colors2)
legend("center",c("Rough","Smooth", "Rough (predict)", "Smooth (predict)"),
pch = c(1, 1, 20, 20), col = c("darkgreen", "darkgoldenrod2"))
summary(model)
