#' @author Bruno Vilela
#'
#' @description This function create a grid in shapefile format and add its IDs to the presence absence matrix.
#' The function was created to make easier the use of Presence Absence Matrix for the ones who prefer to work into a grid in shapefile.
#'
#' @param x A PresenceAbsence object.
#'
#' @return The result is a list of two objects. The first is a grid in shapefile format;
#' the second is a presence absence matrix with an aditional column called FID.
#' SP_ID (shapefile cell identifier).
#'
#'
#' @seealso \code{\link{plot.PresenceAbsence}}
#' @seealso \code{\link{lets.presab.birds}}
#'
#'
#' @export
lets.gridirizer <- function(x){
grid <- rasterToPolygons(x$R)
r <- rasterize(grid, x$R, 1:nrow(grid@data))
SP_ID <- extract(r, x$P[, 1:2])
resultado <- cbind(SP_ID, x$P)
colnames(grid@data) <- "Species_Richness"
return(list("Grid"=grid, "Presence Absence Matrix"=resultado))
}
gridirized <- lets.gridirizer(PAMcrop)
writeSpatialShape(gridirized$Grid, "C:/Users/Bruno/Documents/grid")
writeSpatialShape(gridirized$Grid, "C:/Users/Bruno/Documents/grid2")
gridirized$Grid
gridirized$Grid@pol
gridirized$Grid@Polygons
gridirized$Grid@polygons
names(gridirized$Grid@polygons)
length(gridirized$Grid@polygons)
slotnames(gridirized$Grid@polygons)
slotNames(gridirized$Grid@polygons)
slotNames(gridirized$Grid@polygons[[1]])
slotNames(gridirized$Grid@polygons[[1]]@Polygons)
gridirized$Grid@polygons[[1]]@Polygons
gridirized$Grid@polygons[[1]]@Polygons@coord
gridirized$Grid@polygons[[1]]@Polygons[[1]]@coord
gridirized$Grid@polygons[[1]]@Polygons[[1]]@coords
for(i in 1:350){
print(gridirized$Grid@polygons[[i]]@Polygons[[1]]@coords)
}
plot(PAMcrop)
plot(gridirized$Grid, add=T)
rm(list=ls())
library(letsR)
?lets.presab
library(letsR)
?lets.presab
data(Phyllomedusa)  # Spatial distribution polygons of south american frogs of genus Phyllomedusa.
PAM <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15)
summary(PAM)
require(maps)
plot(PAM)  # Species richness map
plot(PAM, name="Phyllomedusa nordestina")  # Map of the specific species
resu1 <- lets.presab.birds("C:/Users/Bruno/Documents/Birds/Picidae",
resol=2, origin=c(1, 2), seasonal=c(1, 2),
presence=c(1, 2, 3), count=TRUE)
resu1 <- lets.presab.birds("C:/Users/Bruno/Documents/Birds/Picidae",
resol=6, origin=c(1, 2), seasonal=c(1, 2),
presence=c(1, 2, 3), count=TRUE)
resu1
data(PAM)
lets.rangesize <- function(x){
rangesize <- x$P[-(1:2)]
return(rangesize)
}
library(letsR)
data(PAM)
lets.rangesize <- function(x){
rangesize <- x$P[-(1:2)]
return(rangesize)
}
lets.rangesize(PAM)
lets.rangesize <- function(x){
Range_Size <- x$P[-(1:2)]
Species <- x$S
return(cbind(Species, Range_Size))
}
lets.rangesize <- function(x){
Range_Size <- colSums(x$P[-(1:2)])
Species <- x$S
return(cbind(Species, Range_Size))
}
lets.rangesize(PAM)
lets.rangesize <- function(x){
Range_Size <- colSums(x$P[, -(1:2)])
Species <- x$S
return(cbind(Species, Range_Size))
}
lets.rangesize(PAM)
lets.rangesize <- function(x){
Range_Size <- colSums(x$P[, -(1:2)])
return(Range_Size)
}
lets.rangesize(PAM)
lets.rangesize <- function(x){
Range_Size <- colSums(x$P[, -(1:2)])
return(as.matrix(Range_Size))
}
lets.rangesize(PAM)
lets.rangesize <- function(x){
Range_Size <- colSums(x$P[, -(1:2)])
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
lets.rangesize(PAM)
data(Phyllomedusa)
names(Phyllomedusa)
slotNames(Phyllomedusa)
Phyllomedusa
Phyllomedusa@polygons
str(Phyllomedusa)
sapply(slot(Phyllomedusa, "polygons"), slot, "area")
length(Phyllomedusa)
class(Phyllomedusa)
library(geosphere)
?areaPolygon
areaPolygon(Phyllomedusa)
Range_Size <- sapply(slot(x, "polygons"), slot, "area")
Range_Size <- as.matrix(Range_Size)
lets.rangesize <- function(x){
if(class(x)=="PresenceAbsence"){
Range_Size <- colSums(x$P[, -(1:2)])
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
if(class(x)=="SpatialPolygonsDataFrame"){
Range_Size <- sapply(slot(x, "polygons"), slot, "area")
Range_Size2 <- areaPolygon(Phyllomedusa)
return(cbind(Range_Size, Range_Size2))
}
}
(resu <- lets.rangesize(Phyllomedusa))
Range_Size@data
Phyllomedusa@data
rownames(Range_Size)
grid <- rasterToPolygons(PAM$R)
library(maptools)
grid <- rasterToPolygons(PAM$R)
library(raster)
grid <- rasterToPolygons(PAM$R)
cellsize <- areaPolygon(grid)
cellsize
r <- rasterize(grid, x$R, cellsize)
r <- rasterize(grid, PAM$R, cellsize)
plot(r)
matrix(c(0,1), ncol=5, nrow=5)
m <- matrix(c(0,1), ncol=5, nrow=5)
c<-1:5
m*c
colSums(PAM$P[, -(1:2)]*cellsize2)
cellsize2 <- extract(r, x$P[, 1:2])
cellsize2 <- extract(r, PAM$P[, 1:2])
colSums(PAM$P[, -(1:2)]*cellsize2)
Range_Size <- colSums(PAM$P[, -(1:2)]*cellsize2)
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
Range_Size
Phyllomedusa
#' Calculate species range size
#'
#' @author Bruno Vilela
#'
#' @description This function calculate species range size from a PresenceAbsence object or direct from the species shapefiles.
#'
#' @param x a PresenceAbsence object or an SpatialPolygonsDataFrame.
#' @param species_name  species name in the same other as in the SpatialPolygonsDataFrame (only needed if x is a SpatialPolygonsDataFrame).
#' @param "geographical" or "planar". Indicate wheter the shapefile has geographical or planar coordinates(only needed if x is a SpatialPolygonsDataFrame).
#' @param units "cell" or "squaremeters". Indicate if the units wanted are in number of cells occupied or in square meters(only needed if x is a PresenceAbsence object).
#'
#' @return The result is a matrix with the range size of each species.
#' If the range size accounts for the earth curvature (Yes or No) and it's unit
#' may differ for each argument combination:
#' 1) SpatialPolygonsDataFrame & geographical = Square meters. Yes.
#' 2) SpatialPolygonsDataFrame & planar = same units as the coordinates. No.
#' 3) PresenceAbsence & cell = number of cells. No.
#' 4) PresenceAbsence & squaremeters = squaremeters. Yes.
#'
#' @examples \dontrun{
#' # SpatialPolygonsDataFrame & geographical
#' data(Phyllomedusa)
#' rangesize <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="geographic")
#'
#' # SpatialPolygonsDataFrame & planar
#' data(Phyllomedusa)
#' rangesize <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="planar")
#'
#' # PresenceAbsence & cell
#' data(PAM)
#' rangesize <- lets.rangesize(x=PAM, units="cell")
#'
#' # PresenceAbsence & squaremeters
#' data(PAM)
#' rangesize <- lets.rangesize(x=PAM, units="squaremeters")
#' }
#'
#'
#' @export
lets.rangesize <- function(x, species_name=x@data[, 1],
coordinates="geographic",
units="cells"){
if(class(x)=="PresenceAbsence"){
if(units=="cell"){
Range_Size <- colSums(x$P[, -(1:2)])
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
if(units=="squaremeter"){
grid <- rasterToPolygons(x$R)
cellsize <- areaPolygon(grid)
r <- rasterize(grid, x$R, cellsize)
cellsize2 <- extract(r, x$P[, 1:2])
Range_Size <- colSums(PAM$P[, -(1:2)]*cellsize2)
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
}
if(class(x)=="SpatialPolygonsDataFrame"){
if(coordinates=="planar"){
Range_Size <- sapply(slot(x, "polygons"), slot, "area")
Range_Size <- as.matrix(Range_Size)
rownames(Range_Size) <- species_name
return(Range_Size)
}
if(coordinates=="geographic"){
Range_Size <- areaPolygon(Phyllomedusa)
Range_Size <- as.matrix(Range_Size)
rownames(Range_Size) <- species_name
return(Range_Size)
}
}
}
data(Phyllomedusa)
rangesize <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="planar")
rangesize
#' Calculate species range size
#'
#' @author Bruno Vilela
#'
#' @description This function calculate species range size from a PresenceAbsence object or direct from the species shapefiles.
#'
#' @param x a PresenceAbsence object or an SpatialPolygonsDataFrame.
#' @param species_name  species name in the same other as in the SpatialPolygonsDataFrame (only needed if x is a SpatialPolygonsDataFrame).
#' @param "geographical" or "planar". Indicate wheter the shapefile has geographical or planar coordinates(only needed if x is a SpatialPolygonsDataFrame).
#' @param units "cell" or "squaremeters". Indicate if the units wanted are in number of cells occupied or in square meters(only needed if x is a PresenceAbsence object).
#'
#' @return The result is a matrix with the range size of each species.
#' If the range size accounts for the earth curvature (Yes or No) and it's unit
#' may differ for each argument combination:
#' 1) SpatialPolygonsDataFrame & geographical = Square meters. Yes.
#' 2) SpatialPolygonsDataFrame & planar = same units as the coordinates. No.
#' 3) PresenceAbsence & cell = number of cells. No.
#' 4) PresenceAbsence & squaremeters = squaremeters. Yes.
#'
#' @examples \dontrun{
#' # SpatialPolygonsDataFrame & geographical
#' data(Phyllomedusa)
#' rangesize <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="geographic")
#'
#' # SpatialPolygonsDataFrame & planar
#' data(Phyllomedusa)
#' rangesize <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="planar")
#'
#' # PresenceAbsence & cell
#' data(PAM)
#' rangesize <- lets.rangesize(x=PAM, units="cell")
#'
#' # PresenceAbsence & squaremeters
#' data(PAM)
#' rangesize <- lets.rangesize(x=PAM, units="squaremeters")
#' }
#'
#'
#' @export
lets.rangesize <- function(x, species_name=x@data[, 1],
coordinates="geographic",
units="cells"){
if(class(x)=="PresenceAbsence"){
if(units=="cell"){
Range_Size <- colSums(x$P[, -(1:2)])
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
if(units=="squaremeter"){
grid <- rasterToPolygons(x$R)
cellsize <- areaPolygon(grid)
r <- rasterize(grid, x$R, cellsize)
cellsize2 <- extract(r, x$P[, 1:2])
Range_Size <- colSums(PAM$P[, -(1:2)]*cellsize2)
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
}
if(class(x)=="SpatialPolygonsDataFrame"){
if(coordinates=="planar"){
Range_Size <- sapply(slot(x, "polygons"), slot, "area")
Range_Size <- as.matrix(Range_Size)
rownames(Range_Size) <- species_name
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
if(coordinates=="geographic"){
Range_Size <- areaPolygon(Phyllomedusa)
Range_Size <- as.matrix(Range_Size)
rownames(Range_Size) <- species_name
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
}
}
data(Phyllomedusa)
rangesize <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="geographic")
head(rangesize)
data(Phyllomedusa)
rangesize <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="planar")
head(rangesize)
rangesize <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="geographic")
rangesize2 <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="planar")
data(PAM)
rangesize3 <- lets.rangesize(x=PAM, units="cell")
data(PAM)
rangesize4 <- lets.rangesize(x=PAM, units="squaremeters")
head(rangeize4)
head(rangesize4)
head(rangesize3)
rangesize3
x=PAM
rangesize4 <- lets.rangesize(x=PAM, units="squaremeter")
rangesize4
plot(rangesize, rangesize2)
plot(rangesize, rangesize3)
dim(rangesize)
dim(rangesize3)
rownames(rangesize)
duplicated(rownames(rangesize))
plot(rangesize3, rangesize4)
plot(rangesize1, rangesize2)
plot(rangesize, rangesize2)
plot(rangesize3, rangesize4)
aggregate(rangesize[,1]~rownames(rangesize),FUN=sum)
lets.rangesize <- function(x, species_name=x@data[, 1],
coordinates="geographic",
units="cells"){
if(class(x)=="PresenceAbsence"){
if(units=="cell"){
Range_Size <- colSums(x$P[, -(1:2)])
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
if(units=="squaremeter"){
grid <- rasterToPolygons(x$R)
cellsize <- areaPolygon(grid)
r <- rasterize(grid, x$R, cellsize)
cellsize2 <- extract(r, x$P[, 1:2])
Range_Size <- colSums(PAM$P[, -(1:2)]*cellsize2)
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
}
if(class(x)=="SpatialPolygonsDataFrame"){
if(coordinates=="planar"){
Range_Size <- sapply(slot(x, "polygons"), slot, "area")
Range_Size <- as.matrix(Range_Size)
rownames(Range_Size) <- species_name
colnames(Range_Size) <- 'Range_size'
Range_Size2 <- aggregate(Range_Size[, 1]~species_name), FUN=sum)
Range_Size <- Range_Size2[, 2]
rownames(Range_Size) <- Range_Size2[, 1]
return(Range_Size)
}
if(coordinates=="geographic"){
Range_Size <- areaPolygon(Phyllomedusa)
Range_Size <- as.matrix(Range_Size)
rownames(Range_Size) <- species_name
colnames(Range_Size) <- 'Range_size'
Range_Size2 <- aggregate(Range_Size[, 1]~species_name), FUN=sum)
Range_Size <- Range_Size2[, 2]
rownames(Range_Size) <- Range_Size2[, 1]
return(Range_Size)
}
}
}
lets.rangesize <- function(x, species_name=x@data[, 1],
coordinates="geographic",
units="cells"){
if(class(x)=="PresenceAbsence"){
if(units=="cell"){
Range_Size <- colSums(x$P[, -(1:2)])
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
if(units=="squaremeter"){
grid <- rasterToPolygons(x$R)
cellsize <- areaPolygon(grid)
r <- rasterize(grid, x$R, cellsize)
cellsize2 <- extract(r, x$P[, 1:2])
Range_Size <- colSums(PAM$P[, -(1:2)]*cellsize2)
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
}
if(class(x)=="SpatialPolygonsDataFrame"){
if(coordinates=="planar"){
Range_Size <- sapply(slot(x, "polygons"), slot, "area")
Range_Size <- as.matrix(Range_Size)
rownames(Range_Size) <- species_name
colnames(Range_Size) <- 'Range_size'
Range_Size2 <- aggregate(Range_Size[, 1]~species_name, FUN=sum)
Range_Size <- Range_Size2[, 2]
rownames(Range_Size) <- Range_Size2[, 1]
return(Range_Size)
}
if(coordinates=="geographic"){
Range_Size <- areaPolygon(Phyllomedusa)
Range_Size <- as.matrix(Range_Size)
rownames(Range_Size) <- species_name
colnames(Range_Size) <- 'Range_size'
Range_Size2 <- aggregate(Range_Size[, 1]~species_name, FUN=sum)
Range_Size <- Range_Size2[, 2]
rownames(Range_Size) <- Range_Size2[, 1]
return(Range_Size)
}
}
}
data(Phyllomedusa)
rangesize <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="geographic")
data(Phyllomedusa)
rangesize2 <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="planar")
data(PAM)
rangesize3 <- lets.rangesize(x=PAM, units="cell")
data(PAM)
rangesize4 <- lets.rangesize(x=PAM, units="squaremeter")
lets.rangesize <- function(x, species_name=x@data[, 1],
coordinates="geographic",
units="cells"){
if(class(x)=="PresenceAbsence"){
if(units=="cell"){
Range_Size <- colSums(x$P[, -(1:2)])
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
if(units=="squaremeter"){
grid <- rasterToPolygons(x$R)
cellsize <- areaPolygon(grid)
r <- rasterize(grid, x$R, cellsize)
cellsize2 <- extract(r, x$P[, 1:2])
Range_Size <- colSums(PAM$P[, -(1:2)]*cellsize2)
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
}
if(class(x)=="SpatialPolygonsDataFrame"){
if(coordinates=="planar"){
Range_Size <- sapply(slot(x, "polygons"), slot, "area")
Range_Size <- as.matrix(Range_Size)
rownames(Range_Size) <- species_name
colnames(Range_Size) <- 'Range_size'
Range_Size2 <- aggregate(Range_Size[, 1]~species_name, FUN=sum)
Range_Size <- as.matrix(Range_Size2[, 2])
rownames(Range_Size) <- Range_Size2[, 1]
return(Range_Size)
}
if(coordinates=="geographic"){
Range_Size <- areaPolygon(Phyllomedusa)
Range_Size <- as.matrix(Range_Size)
rownames(Range_Size) <- species_name
colnames(Range_Size) <- 'Range_size'
Range_Size2 <- aggregate(Range_Size[, 1]~species_name, FUN=sum)
Range_Size <- as.matrix(Range_Size2[, 2])
rownames(Range_Size) <- Range_Size2[, 1]
return(Range_Size)
}
}
}
data(Phyllomedusa)
rangesize <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="geographic")
data(Phyllomedusa)
rangesize2 <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="planar")
plot(rangesize, rangesize2)
plot(rangesize, rangesize3)
plot(rangesize, rangesize4)
plot(rangesize2, rangesize3)
plot(rangesize2, rangesize4)
plot(rangesize3, rangesize4)
rm(list=ls())
library(letsR)
library(letsR)
data(PAM)
field <- lets.field(PAM, range, PAM$S, weigth=TRUE)
range <- lets.rangesize(x=PAM, units="cell")
field <- lets.field(PAM, range, PAM$S, weigth=TRUE)
field
rm(list=ls())
library(letsR)
library(letsR)
library(letsR)
