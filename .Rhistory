mat.final <- mat2[pos, ]
dim(mat.final)
mat2%in%mat1
mat1 <- read.table("C:/Users/Bruno/Downloads/mat1.txt", sep=",")
mat2 <- read.table("C:/Users/Bruno/Downloads/mat2.txt", sep=",")
mat1
mat1 <- read.table("C:/Users/Bruno/Downloads/mat1.txt")
mat2 <- read.table("C:/Users/Bruno/Downloads/mat2.txt")
apply(mat1, 1, paste)
apply(mat1, 2, paste)
library(raster)
pos <- which(SpatialPoints(mat1) %in% SpatialPoints(mat2))
SpatialPoints(mat1) %in% SpatialPoints(mat2)
install.packages(compare)
library(compare)
install.packages("compare")
library(compare)
comparison <- compare(mat1,mat2,allowAll=TRUE)
comparison
comparison <- compare(mat1,mat2)
comparison
mat1 <- read.table("C:/Users/Bruno/Downloads/mat1.txt")
mat2 <- read.table("C:/Users/Bruno/Downloads/mat2.txt")
comparison <- compare(mat1, mat2)
source('~/.active-rstudio-document', echo=TRUE)
comparison
mat1.2 <- paste(mat1[,1], mat1[,2])
mat1.2
mat1
mat2.2 <- paste(mat2[,1], mat2[,2])
pos <- which(mat1.2 %in% mat2.1)
pos <- which(mat1.2 %in% mat2.2)
mat.final <- mat1[pos, ]
mat.final
mat1.2 %in% mat2.2
pos2 <- which(mat2.2 %in% mat1.2)
mat.final2 <- mat2[pos2, ]
mat.final2
dim(mat.final2)
mat.final2
y <- sample(1:100, 10)
x <- 1:10
x
y
plot(x, y)
plot(x, y, xlab="Riqueza", ylab="Temperatura")
?plot
?par
plot(x, y, xlab="Riqueza", ylab="Temperatura",
main="Ejemplo")
plot(x, y, xlab="Riqueza", ylab="Temperatura",
main="Ejemplo", cex=2)
plot(x, y, xlab="Riqueza", ylab="Temperatura",
main="Ejemplo", cex=3)
main="Ejemplo", cex=4)
plot(x, y, xlab="Riqueza", ylab="Temperatura",
main="Ejemplo", cex=4)
plot(x, y, xlab="Riqueza", ylab="Temperatura",
main="Ejemplo", cex=1:10)
rank(y)
plot(x, y, xlab="Riqueza", ylab="Temperatura",
main="Ejemplo", cex=rank(y))
plot(x, y, xlab="Riqueza", ylab="Temperatura",
main="Ejemplo", cex=rank(y), pch=2)
main="Ejemplo", cex=rank(y), pch=3)
plot(x, y, xlab="Riqueza", ylab="Temperatura",
main="Ejemplo", cex=rank(y), pch=3)
plot(x, y, xlab="Riqueza", ylab="Temperatura",
main="Ejemplo", cex=rank(y), pch="andrei")
plot(x, y, xlab="Riqueza", ylab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=c("a", "n", "d", "r", "e", "i"))
z <- sample(1:100, 10)
plot(x, y, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=c("a", "n", "d", "r", "e", "i"))
plot(x, y, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=c("a", "n", "d", "r", "e", "i"))
points(x, z, col="red")
points(x, z, col="red", cex=rank(y))
plot(x, y, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=c("a", "n", "d", "r", "e", "i"),
bty="l")
plot(x, y, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=c("a", "n", "d", "r", "e", "i"),
bty="s", bg="green")
plot(x, y, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=c("a", "n", "d", "r", "e", "i"),
bty="l", bg="green")
plot(x, y, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=c("a", "n", "d", "r", "e", "i"),
bty="l", fg="green")
x11()
plot(x, y, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=c("a", "n", "d", "r", "e", "i"),
bty="l", fg="green", bg="blue")
par(bg="blue")
plot(x, y, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=c("a", "n", "d", "r", "e", "i"),
bty="l", fg="green", bg="blue")
plot(1:10, 1:10)
par(bg="white")
plot(x, y, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=c("a", "n", "d", "r", "e", "i"),
bty="l", fg="green", bg="blue")
par(mfrow=c(1, 2))
plot(x, y, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=c("a", "n", "d", "r", "e", "i"),
bty="l", fg="green", bg="blue")
points(x, z, col="red", cex=rank(y))
plot(1:10, 1:10)
x11(20, 20)
plot(x, y, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=c("a", "n", "d", "r", "e", "i"),
bty="l", fg="green", bg="blue")
points(x, z, col="red", cex=rank(y))
plot(1:10, 1:10)
par(mfrow=c(1, 2))
plot(x, y, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=c("a", "n", "d", "r", "e", "i"),
bty="l", fg="green", bg="blue")
points(x, z, col="red", cex=rank(y))
plot(1:10, 1:10)
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=c("a", "n", "d", "r", "e", "i"),
bty="u", fg="green", bg="blue")
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=c("a", "n", "d", "r", "e", "i", "t", "o", "c", "a"),
bty="u", fg="green", bg="blue")
par(mfrow=c(1, 1))
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=c("a", "n", "d", "r", "e", "i", "t", "o", "c", "a"),
bty="u", fg="green", bg="blue")
points(x, z, col="red", cex=rank(y))
plot(1:10, 1:10)
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=c("a", "n", "d", "r", "e", "i", "t", "o", "c", "a"),
bty="u", fg="green", bg="blue")
points(x, z, col="red", cex=rank(y))
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=c("a", "n", "d", "r", "e", "i", "t", "o", "c", "a"),
bty="n", fg="green", bg="blue")
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=c("a", "n", "d", "r", "e", "i", "t", "o", "c", "a"),
bty="n", fg="green", bg="blue", axis=F)
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=c("a", "n", "d", "r", "e", "i", "t", "o", "c", "a"),
bty="n", fg="green", bg="blue",  axes=F)
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=rank(y),
pch=16, bty="n", fg="green", bg="blue",  axes=F)
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=1, pch=16, bty="l")
par(mfrow=c(1, 1))
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=1, pch=16, bty="l")
points(x, z, col="red", cex=rank(y))
z <- sample(1:10, 10)
points(x, z, col="red", cex=rank(y))
points(x, z, col="red", cex=1, pch=2)
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=1, pch=16, bty="l")
points(x, z, col="red", cex=1, pch=2)
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=1, pch=16, bty="l", type="l")
points(x, z, col="red", cex=1, pch=2)
points(x, 1:10, col="red", cex=1, pch=2)
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=1, pch=16, bty="l", type="l")
points(x, 1:10, col="red", cex=1, pch=2)
points(x, 1:10, cex=16, pch=2)
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=1, pch=16, bty="l", type="l")
points(x, 1:10, cex=1, pch=16)
abline(h=6, lty=2)
text(x=2, y=8, "y=a+bx")
text(x=2, y=7.5, "R^2=2")
text(x=2, y=7.5, expression("R^2=2"))
text(x=2, y=7.5, paste(expression("R^2=2")))
text(x=2, y=8, "y=a+bx")
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=1, pch=16, bty="l", type="l")
points(x, 1:10, cex=1, pch=16)
abline(h=6, lty=2)
text(x=2, y=8, "y=a+bx")
text(x=2, y=7.5, paste(expression("R^2=2")))
text(x=2, y=7.5, expression(paste("R^2=2")))
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=1, pch=16, bty="l", type="l",
col=rev(heat.colors(10)[rank(1:10)]))
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=1, pch=16, bty="l", type="l")
points(x, 1:10, cex=1, pch=16, col=rev(heat.colors(10)[rank(1:10)]))
legend(x=2, y=9)
legend(x=2, y=9, "Points")
normal <- rnorm(100)
hist(normal)
hist(normal, main="teste")
hist(normal, 30)
hist(normal, 100)
hist(normal, 10)
hist(normal, 10, col="blue")
hist(normal, 10, col=topo.colors(10))
box()
hist(normal, 10, col=topo.colors(10))
box(bty="l")
abline(v=0, lty=2, col="red")
abline(v=-2, lty=2, col="red")
abline(x=-2,  y=20, lty=2, col="red")
abline(v=-2,  h=20, lty=2, col="red")
abline(a=-2, b=15, lty=2, col="red")
hist(normal, 10, col=topo.colors(10))
box(bty="l")
lines(x=-2, y=15, lty=2, col="red")
lines(x=-2, y=15, lty=2, col="red")
lines(x=seq(-2, 2), y=c(0, 15), lty=2, col="red")
lines(x=rep(-2, 2), y=c(0, 15), lty=2, col="red")
point(x=-2, y=15, pch=18, col="red")
points(x=-2, y=15, pch=18, col="red")
points(x=-2, y=15, pch=18, col="red", cex=2)
categorica <- c("Andrei", "Andrea")
categorica
categorica <- factor(c("Andrei", "Andrea"))
categorica
categorica <- rep(factor(c("Andrei", "Andrea")), 10)
categorica
valores <- rep(sample(1:10, 1), sample(5:20, 1), 10)
valores
sample(1:10, 1)
valores <- sample(1:10, 20)
valores <- sample(1:10, 20, replace=T)
valores
plot(y=categorica, x=valores)
boxplot(y=categorica, x=valores)
boxplot(x=categorica, y=valores)
plot(x=categorica, y=valores)
boxplot(x=as.character(categorica), y=valores)
boxplot(y=valores, x=as.character(categorica))
plot(y=valores, x=as.character(categorica))
as.character(categorica)
plot(y=valores, x=as.character(categorica))
plot(y=valores, x=categorica)
interaction.plot(y=valores, x=categorica)
interaction.plot(trace.factor=valores, x.factor=categorica)
interaction.plot(response=valores, x.factor=categorica)
cat3 <- rep(c("verde", "azul"), 10)
interaction.plot(x.factor=categorica, cat3, response=valores)
interaction.plot(x.factor=categorica, cat3, response=valores)
?boxplot
boxplot(valores~categorica)
plot(valores~categorica)
interaction.plot(valores~categorica)
interaction.plot(valores~categorica+cat3)
resu <- lm(valores~categorica)
resu
summary(resu)
plot(resu)
plot(valores~categorica)
??plot.mean
?plotmeans
??plotmeans
library(gplots)
plotmeans(valores~categorica)
plotmeans(valores~categorica, gap=0)
plotmeans(valores~categorica, gap=0, bty="l")
valores2 <- sample(1:10, 20, replace=T)
plotmeans(valores2~categorica, gap=0, bty="l", add=T, col="red")
example(image)
example(countour)
example(contour)
read.table("C:/Users/Bruno/Desktop/shootjan15.txt")
read.table("C:/Users/Bruno/Desktop/shootjan15.txt",
sep="\t")
andros <- read.table("C:/Users/Bruno/Desktop/shootjan15.txt",
sep="\t", header=T)
head(andros)
plot(vdi~pinea+tratamiento, data=pinea)
andros <- read.table("C:/Users/Bruno/Desktop/shootjan15.txt",
sep="\t", header=T)
colnames(andros)
plot(vdi~especie+tratamiento, data=pinea)
plot(vdi~especie+tratamiento, data=andros)
plot(vdi~especie+as.factor(tratamiento), data=andros)
plot(vdi~especie+as.factor(tratamiento), data=andros)
plot(vdi~especie+as.factor(tratamiento), data=andros)
x11()
par(mfrow=c(1,2))
plot(vdi~especie+as.factor(tratamiento), data=andros)
boxplot(vdi~especie+as.factor(tratamiento), data=andros)
par(mfrow=c(1,1))
boxplot(vdi~especie+as.factor(tratamiento), data=andros)
boxplot(vdi~especie+as.factor(tratamiento), data=andros, xlab="")
x11()
par(mfrow=c(1,1))
boxplot(vdi~especie+as.factor(tratamiento), data=andros, xlab="")
boxplot(vdi~especie+as.factor(tratamiento), data=andros, xaxt="n")
x11()
boxplot(vdi~especie+as.factor(tratamiento), data=andros, xaxt="n")
labs <- paste(especie, tratamiento)
labs <- paste(especie, tratamiento, data=andros)
labs <- paste(andros$especie, andros$tratamiento)
text(cex=1, x=x-.25, y=-1.25, labs, xpd=TRUE, srt=45)
text(cex=1, x=.25, y=-3, labs, xpd=TRUE, srt=45)
text(cex=1, x=1:12, y=-3, labs, xpd=TRUE, srt=45)
boxplot(vdi~especie+as.factor(tratamiento), data=andros, srt=45)
plotmeans(vdi~especie+as.factor(tratamiento), data=andros, srt=45)
?tiff
plot(vdi~especie+as.factor(tratamiento), data=andros, srt=45)
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=1, pch=16, bty="l", type="l")
points(x, 1:10, cex=1, pch=16, col=rev(heat.colors(10)[rank(1:10)]))
abline(h=6, lty=2)
text(x=2, y=8, "y=a+bx")
text(x=2, y=7.5, expression(paste("R^2=2")))
legend(x=2, y=9, "Points")
points(x, 1:10, cex=1, pch=16, col=rev(heat.colors(10)[rank(1:10)]))
x <- 1:10
y <- sample(1:100, 10)
z <- sample(1:10, 10)
par(mfrow=c(1, 1))
x11(20, 20)
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=1, pch=16, bty="l", type="l")
points(x, 1:10, cex=1, pch=16, col=rev(heat.colors(10)[rank(1:10)]))
abline(h=6, lty=2)
text(x=2, y=8, "y=a+bx")
text(x=2, y=7.5, expression(paste("R^2=2")))
getwd()
png("C:/Users/Bruno/desktop/andrei.png", 15, 15, units="cm", pointsize = 300)
par(mfrow=c(1, 1))
x11(20, 20)
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=1, pch=16, bty="l", type="l")
points(x, 1:10, cex=1, pch=16, col=rev(heat.colors(10)[rank(1:10)]))
abline(h=6, lty=2)
text(x=2, y=8, "y=a+bx")
text(x=2, y=7.5, expression(paste("R^2=2")))
dev.off()
png("C:/Users/Bruno/Desktop/andrei.png", 15, 15, units="cm", pointsize = 300)
par(mfrow=c(1, 1))
x11(20, 20)
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=1, pch=16, bty="l", type="l")
points(x, 1:10, cex=1, pch=16, col=rev(heat.colors(10)[rank(1:10)]))
abline(h=6, lty=2)
text(x=2, y=8, "y=a+bx")
text(x=2, y=7.5, expression(paste("R^2=2")))
dev.off()
png("C:/Users/Bruno/Desktop/andrei.png", 15, 15, units="cm", pointsize = 300)
par(mfrow=c(1, 1))
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=1, pch=16, bty="l", type="l")
points(x, 1:10, cex=1, pch=16, col=rev(heat.colors(10)[rank(1:10)]))
abline(h=6, lty=2)
text(x=2, y=8, "y=a+bx")
text(x=2, y=7.5, expression(paste("R^2=2")))
dev.off()
dev.off()
png("C:/Users/Bruno/Desktop/andrei.png", 15, 15, units="cm", pointsize = 300)
par(mfrow=c(1, 1))
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=1, pch=16, bty="l", type="l")
points(x, 1:10, cex=1, pch=16, col=rev(heat.colors(10)[rank(1:10)]))
abline(h=6, lty=2)
text(x=2, y=8, "y=a+bx")
text(x=2, y=7.5, expression(paste("R^2=2")))
dev.off()
png("andrei.png", 15, 15, units="cm", pointsize = 300)
par(mfrow=c(1, 1))
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=1, pch=16, bty="l", type="l")
png("andrei.png", 15, 15, units="cm", pointsize = 300)
par(mfrow=c(1, 1))
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=1, pch=16, bty="l", type="l")
points(x, 1:10, cex=1, pch=16, col=rev(heat.colors(10)[rank(1:10)]))
abline(h=6, lty=2)
text(x=2, y=8, "y=a+bx")
text(x=2, y=7.5, expression(paste("R^2=2")))
dev.off()
png("andrei.png", 15, 15, units="cm",
res = 300)
par(mfrow=c(1, 1))
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=1, pch=16, bty="l", type="l")
points(x, 1:10, cex=1, pch=16, col=rev(heat.colors(10)[rank(1:10)]))
abline(h=6, lty=2)
text(x=2, y=8, "y=a+bx")
text(x=2, y=7.5, expression(paste("R^2=2")))
dev.off()
png("andrei.png", 15, 15, units="cm",
res = 300, bg="transparent")
par(mfrow=c(1, 1))
plot(1:10, 1:10, ylab="Riqueza", xlab="Temperatura",
main="Ejemplo", cex=1, pch=16, bty="l", type="l",
bg="transparent")
points(x, 1:10, cex=1, pch=16, col=rev(heat.colors(10)[rank(1:10)]))
abline(h=6, lty=2)
text(x=2, y=8, "y=a+bx")
text(x=2, y=7.5, expression(paste("R^2=2")))
dev.off()
library(letsR
)
data(PAM)
PAM
PAM$R
library(raster)
?writeRaster
writeRaster(richness.raster, ""C:/Users/Bruno/Desktop/rasterrich", GTiff)
writeRaster(richness.raster, "C:/Users/Bruno/Desktop/rasterrich", GTiff)
writeRaster(PAM$R, "C:/Users/Bruno/Desktop/rasterrich", GTiff)
writeRaster(PAM$R, "C:/Users/Bruno/Desktop/rasterrich", "GTiff")
dados<-read.table("clipboard", header=T, sep="\t")
dados<-read.table("clipboard", header=T, sep="\t")
dados<-read.table("clipboard", header=T, sep="\t")
g2<-dados[,c(1,3)] #abrindo os dados que se referem ao tempo (coluna 1)e a Ho do Grupo 2(coluna 3)
limiares<-function(g2, n=0.1){ #nossa função
n <- round(nrow(g2)*n)
n2 <- n-1
beta <- numeric((nrow(g2)-n2)) #vetor vazio com o mesmo número de linhas do meu arquivo
for(i in 1:(nrow(g2)-n2)){ #calcular a inclinação das retas de 3 em 3 pontos, sendo que esta contagem vai até o penultimo ponto
linha <- line(g2[i:(i+n2),]) #através da função "line" calculamos a interceção e inclinação das retas
beta[i] <- linha$coeff[2]  #salvamos apenas o coeficiente de inclinação, em "beta"
}
beta2 <- numeric((length(beta)-1)) #criando vetor que vai guardar a diferença entre as inclinações das retas de um ponto e o ponto seguinte
neg <- rep(NA, (length(beta)-1)) #vetor para guardar o valor de decaimento
posi <- rep(NA, (length(beta)-1)) #vetor para guardar o valor de ascenção
posi2 <- rep(NA, (length(beta)-1))
for(i in 1:(length(beta)-1)){ #calculando a diferença entre as inclinações
beta2[i] <- beta[i]-beta[(i+1)] #subtraindo os valores e guardando em "beta2"
neg[i] <- all(beta[i]<0 & beta[((i+1):(i+(n2)))]<0, na.rm=TRUE) #comparando dois betas, para saber se o atual e o seguinte tem a mesma direção, se os dois são negativos a curva esta caindo
posi[i] <- all(beta[i]>0 & beta[(i+1):(i+(n2))]>0, na.rm=TRUE) #comparando dois betas, para saber se o atual e o seguinte tem a mesma direção, se os dois sao positivos a curva está subindo
posi2[i] <- all(beta[i]>0 & beta[(i+1):(i+(n2/2))]>0, na.rm=TRUE)
}
if(all(posi==FALSE)){
posi <- posi2
}
pos1 <- which(beta2==max(beta2[posi])) #identificando qual dos valores guardados em posi é maior, pois este será o ponto de maior ascenção
pos2 <- which(beta2==max(beta2[neg])) #identificando qual dos valores guardados em neg é maior, pois este será o ponto de maior decaimento
pos2 <- pos2[neg[pos2]]
pos1 <- pos1[posi[pos1]]
poss <- c(pos1[1]-1,pos2[1]+1)#somamos 1 pois o ponto que representa as duas retas que foram encontradas e sempre o primeiro da segunda reta quando estamos olhando o decaimento, e diminuimos 1 quando olhamos a ascenção pois é sempre o ponto da primeira reta
return(sort(g2[poss,1]))
}
resultado <- limiares(g2, n=0.1)
plot(g2)
abline(v=resultado, lty=2)
resultado <- limiares(g2, n=0.2)
plot(g2)
abline(v=resultado, lty=2)
resultado <- limiares(g2, n=0.1)
plot(g2)
abline(v=resultado, lty=2)
resultado <- limiares(g2, n=0.15)
plot(g2)
abline(v=resultado, lty=2)
resultado <- limiares(g2, n=0.11)
plot(g2)
abline(v=resultado, lty=2)
resultado <- limiares(g2, n=0.1)
plot(g2)
abline(v=resultado, lty=2)
resultado <- limiares(g2, n=0.105)
plot(g2)
abline(v=resultado, lty=2)
resultado <- limiares(g2, n=0.1)
plot(g2)
abline(v=resultado, lty=2)
resultado <- limiares(g2, n=0.105)
plot(g2)
abline(v=resultado, lty=2)
resultado <- limiares(g2, n=0.102)
plot(g2)
abline(v=resultado, lty=2)
g2<-dados[,c(1,2)] #abrindo os dados que se referem ao tempo (coluna 1)e a Ho do Grupo 2(coluna 3)
resultado <- limiares(g2, n=0.102)
plot(g2)
abline(v=resultado, lty=2)
library(letsR)
?lets.midpoint
?rbind.data.frame
diff(1:10, 3)
diff(1:10, )
library(letsR)
data(Phyllomedusa)
lets.presab(Phyllomedusa)
?lets.distmat
library(letsR)
?lets.correl
library(letsR)
??rdist.earth
?lets.correl
library(letsR)
library(letsR)
