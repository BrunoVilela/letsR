Brasil <- readShapePoly("C:/Users/Bruno/Documents/Mapas/brazil2.shp", repair = TRUE)
Brasil <- readShapePoly("C:/Users/Bruno/Documents/Mapas/uf_car.shp", repair = TRUE)
plot(Brasil)
data(PAM)
plot(PAM)
lets.pamcrop(PAM, Brasil) -> pam2
plot(pam2)
lets.pamcrop(PAM, Brasil, remove.cells = FALSE) -> pam2
summary(pam2)
plot(PAM2)
plot(pam2)
summary(pam2)
colSums(pam2[[2]][-1:2])
colSums(pam2[[2]][, -(1:2)])
rowSums(pam2[[2]][, -(1:2)])
rowSums(pam2[[2]][, -(1:2)], na.rm = TRUE)
pam2[[2]]
rowSums(pam2[[1]][, -(1:2)], na.rm = TRUE)
rowSums(pam2[[1]][, -(1:2)], na.rm = TRUE)==0
sum(rowSums(pam2[[1]][, -(1:2)], na.rm = TRUE)==0)
lets.pamcrop(PAM, Brasil, remove.sp = FALSE) -> pam2
summary(pam2)
names(pam2)
library(letsR)
Brasil <- readShapePoly("C:/Users/Bruno/Documents/Mapas/uf_car.shp")
save(Brasil, list = "Brazil")
save(Brasil, file = "Brazil")
save(Brasil, file = "Brazil.rda")
library(rgeos)
?gUnion
Brazil <- gUnion(Brasil)
Brazil <- gUnaryUnion(Brasil)
plot(Brazil)
save(Brazil, file = "Brazil.rda")
data(iucn)
iucn
is.na
library(letsR)
library(testhat)
library(testthat)
data(Brazil)
data(PAM)
resu_test <- lets.pamcrop(PAM, Brazil, remove.sp = TRUE)
expect_equal(class(resu_test), "PresenceAbsence")
expect_equal(class(resu_test[[1]]), "matrix")
expect_true(inherits(resu_test[[2]], "RasterLayer"))
expect_equal(class(resu_test[[3]]), "character")
response <- summary(resu_test)
expect_true(response$Specieswithoutanypresence == 0)
resu_test <- lets.pamcrop(PAM, Brazil, remove.sp = FALSE)
expect_equal(class(resu_test), "PresenceAbsence")
expect_equal(class(resu_test[[1]]), "matrix")
expect_true(inherits(resu_test[[2]], "RasterLayer"))
expect_equal(class(resu_test[[3]]), "character")
response <- summary(resu_test)
expect_true(response$Specieswithoutanypresence > 0)
Brazil
data(PAM)
# PAM before crop
plot(PAM, xlab = "Longitude", ylab = "Latitude",
main = "Phyllomedusa species richness")
# Crop PAM to Brazil
data(Brazil)
PAM_crop <- lets.pamcrop(PAM, Brazil, remove.sp = TRUE)
plot(PAM_crop, xlab = "Longitude", ylab = "Latitude",
main = "Phyllomedusa species richness (Brazil crop)")
plot(PAM_crop, xlab = "Longitude", ylab = "Latitude",
main = "Phyllomedusa species richness (Brazil crop)",
col = colorRampPalette("green", "yellow", "blue"))
plot(PAM_crop, xlab = "Longitude", ylab = "Latitude",
main = "Phyllomedusa species richness (Brazil crop)",
col = colorRampPalette("green", "yellow", "blue"))
plot(PAM_crop, xlab = "Longitude", ylab = "Latitude",
main = "Phyllomedusa species richness (Brazil crop)",
col = colorRampPalette("green", "yellow", "blue"))
plot(PAM_crop, xlab = "Longitude", ylab = "Latitude",
main = "Phyllomedusa species richness (Brazil crop)",
col = colorRampPalette(c("green", "yellow", "blue")))
plot(PAM_crop, xlab = "Longitude", ylab = "Latitude",
main = "Phyllomedusa species richness (Brazil crop)",
col = colorRampPalette(c("darkgreen", "yellow", "blue")))
plot(PAM, xlab = "Longitude", ylab = "Latitude",
main = "Phyllomedusa species richness")
plot(PAM_crop, xlab = "Longitude", ylab = "Latitude",
main = "Phyllomedusa species richness (Brazil crop)",
col = colorRampPalette(c("darkgreen", "yellow", "blue")))
library(letsR)
## Not run:
data(PAM)
# PAM before crop
plot(PAM, xlab = "Longitude", ylab = "Latitude",
main = "Phyllomedusa species richness")
# Crop PAM to Brazil
data(Brazil)
PAM_crop <- lets.pamcrop(PAM, Brazil, remove.sp = TRUE)
plot(PAM_crop, xlab = "Longitude", ylab = "Latitude",
main = "Phyllomedusa species richness (Brazil crop)",
col = colorRampPalette(c("darkgreen", "yellow", "blue")))
## End(Not run)
data(PAM)
names(PAM)
resu_test <- lets.gridirizer(PAM)
class(resu_test[[1]])
class(resu_test[[2]])
expect_equal(class(resu_test), "list")
expect_equal(class(resu_test[[1]]), "SpatialPolygonsDataFrame")
expect_equal(class(resu_test[[2]]), "matrix")
class(resu_test[[1]]
)
expect_true(inherits(resu_test[[1]], "SpatialPolygonsDataFrame"))
expect_equal(class(resu_test), "list")
expect_true(inherits(resu_test[[1]], "SpatialPolygonsDataFrame"))
expect_equal(class(resu_test[[2]]), "matrix")
library(letsR)
data(wrld_simpl)  # World map
data(wrld_simpl)
plot(wrld_simpl)
data(wrld_simpl)  # World map
Brazil <- wrld_simpl[wrld_simpl$NAME=="Brazil", ]  # Brazil (polygon)
Brazil
data(PAM)
resu_test <- lets.pamcrop(PAM, Brazil, remove.sp = TRUE)
?wrld_simpl
plot(resu_test)
plot(PAM)
PAM[[2]]
extent(PAM[[2]])
as.matrix(extent(PAM[[2]]))
as.vector(extent(PAM[[2]]))
extent(PAM[[2]])
library(letsR)
data(PAM)  # Phyllomedusa presence-absence matrix
require(maptools)
data(wrld_simpl)  # World map
Brazil <- wrld_simpl[wrld_simpl$NAME == "Brazil", ]  # Brazil (polygon)
# Check where is the variable name (in this case it is in "NAME" which will be my z value)
names(Brazil)
PAM_pol <- lets.addpoly(PAM, Brazil, "NAME")
onlyvar = FALSE
x <- PAM
y <- Brazil
z <- "NAME"
pos1 <- names(y) == z
pos1
names(y)[pos1] <- "NOME"
nomes <- y$NOME
nomes
pos1 <- names(y) == z
names(y)
as.character(y$NOME)
valores <- values(x[[2]])
valores
LenValues <- length(valores)
n <- nrow(y)
matriz <- matrix(0, ncol = n, nrow = LenValues)
colnames(matriz) <- nomes
matriz
head(matriz)
xy <- xyFromCell(x[[2]], 1:LenValues)
areashape <- areaPolygon(y)
devtools::load_all(".")
areashape <- areaPolygon(y)
library(maptools)
library(geosphere)
library(fileds)
library(fields)
areashape <- areaPolygon(y)
areagrid <- NULL
global <- all(as.vector(extent(PAM[[2]])) == c(-180, 180, -90, 90))
global
!global
grid <- rasterToPolygons(x[[2]])
grid
areagrid <- try(areaPolygon(grid), silent=TRUE)
areagrid
class(areagrid) == "try-error" | global
if (class(areagrid) == "try-error" | global) {
areagrid <- values(area(x[[2]])) * 1000000
}
position <- !is.na(valores)
position
n
i=1
celu <- extract(x[[2]], y[i, ], cellnumber = TRUE,
small = TRUE, weights = TRUE)
celu2 <- do.call(rbind.data.frame, celu)
celu2
!is.null(celu2[, 2])
celu2 <- celu2[!is.na(celu2[, 2]), ]
celu2
calc1 <- (celu2[, 3] * areashape[i])
calc1
calc2 <- areagrid[position%in%celu2[, 1]]
calc2
position <- which(!is.na(valores))
calc2 <- areagrid[position %in% celu2[, 1]]
position <- which(!is.na(valores))
calc2 <- areagrid[position %in% celu2[, 1]]
calc2
prop <- round(calc1 / calc2, 2)
prop
prop1 <- prop > 1
prop1
any(prop1)
if (any(prop1)) {
prop[prop1] <- 1
}
celu2[, 1]
i
matriz[celu2[, 1], i] <- prop
r <- rasterize(xy, x[[2]], matriz)
rExtract <- extract(r, x[[1]][, 1:2])
rExtract <- as.matrix(rExtract)
colnames(rExtract) <- nomes
rExtract
library(letsR)
data(PAM)  # Phyllomedusa presence-absence matrix
require(maptools)
data(wrld_simpl)  # World map
Brazil <- wrld_simpl[wrld_simpl$NAME == "Brazil", ]  # Brazil (polygon)
# Check where is the variable name
# (in this case it is in "NAME" which will be my z value)
names(Brazil)
PAM_pol <- lets.addpoly(PAM, Brazil, "NAME")
head(PAM_pol)
resu_test <- lets.addpoly(PAM, Brazil, "NAME", onlyvar = FALSE)
ncol(resu_test)
expect_equal(class(resu_test), "matrix")
expect_true(ncol(resu_test) > 1)
expect_equal(class(resu_test), "matrix")
expect_true(ncol(resu_test) == 1)
resu_test <- lets.addpoly(PAM, Brazil, "NAME", onlyvar = TRUE)
expect_equal(class(resu_test), "matrix")
expect_true(ncol(resu_test) == 1)
data(PAM)
summary(PAM)
data(iucn)
library(letsR)
summary(PAM)
iucn
head(iucn)
iucn$Status
iucn$Status == VU
iucn$Status == "VU"
iucn$Status == "EN"
rowSums(PAM[[2]][, iucn$Status == "EN"])
PAM[[2]]
PAM[[1]][, iucn$Status == "EN"]
rowSums(PAM[[1]][, iucn$Status == "EN"])
rasEN <- PAM[[2]]
values(rasEN) <- rowSums(PAM[[1]][, iucn$Status == "EN"])
ras <- PAM[[2]]
ENrich <- rowSums(PAM[[1]][, iucn$Status == "EN"])
rasEN <- rasterize(PAM[[1]][, 1:2], ras, field= ENrich)
plot(rasEN)
map(add=TRUE)
plot(rasEN, xlab = "Longitude", ylab = "Latitude")
map(add=TRUE)
plot(rasEN, xlab = "Longitude", ylab = "Latitude", main = "Endangered species")
map(add=TRUE)
ENrich <- rowSums(PAM[[1]][, iucn$Status == "EN"])
ENrich
iucn$Status
ENrich <- rowSums(PAM[[1]][, iucn$Status == "LC"])
ras <- PAM[[2]]
LCrich <- rowSums(PAM[[1]][, iucn$Status == "LC"])
rasLC <- rasterize(PAM[[1]][, 1:2], ras, field = LCrich)
plot(rasEN, xlab = "Longitude", ylab = "Latitude",
main = "Endangered species")
map(add=TRUE)
plot(rasLC, xlab = "Longitude", ylab = "Latitude",
main = "Least Concern species")
map(add=TRUE)
ras <- PAM[[2]]
LCrich <- rowSums(PAM[[1]][, (which(iucn$Status == "LC")+2)])
rasLC <- rasterize(PAM[[1]][, 1:2], ras, field = LCrich)
plot(rasLC, xlab = "Longitude", ylab = "Latitude",
main = "Least Concern species")
map(add=TRUE)
plot(rasLC, xlab = "Longitude", ylab = "Latitude",
main = "Least Concern species",
col = rev(heat.colors(100)))
map(add=TRUE)
data(PAM)
xy = PAM
if (class(xy) == "PresenceAbsence"){
xy <- xy[[1]][, 1:2]
}
xy
n <- nrow(xy)
library(fields)
rdist.earth(xy)
rdist.earth(xy[1:10, ])
exists(miles)
exists("miles")
library(letsR)
data(PAM)
lets.distmat(PAM)
library(letsR)
?lets.distmat
library(letsR)
?lets.distmat
library(letsR)
?lets.presab
?lets.distmat
library(letsR)
?lets.distmat
data(PAM)
distPAM <- lets.distmat(PAM)
distPAM
dim(distan)
dim(distPAM)
class(distPAM) == "dist"
dim(as.matirx(distPAM))
dim(as.matrix(distPAM))
summary(PAM)
sumPAM <- summary(PAM)
names(sumPAM)
dimPAM <- summary(PAM)$Numberofcells
dimPAM
all(dim(as.matrix(distPAM)) == dimPAM)
distPAM <- lets.distmat(PAM, asdist = FALSE)
expect_true(all(dim(distPAM) == dimPAM))
all(dim(distPAM) == dimPAM)
distPAM <- lets.distmat(PAM, miles = TRUE)
class(distPAM) == "dist"
all(dim(as.matrix(distPAM)) == dimPAM)
coords <- PAM[[2]][1:10, 1:2]
coords
coords <- PAM[[1]][1:10, 1:2]
coords
distPAM <- lets.distmat(coords, miles = TRUE)
distPAM
all(dim(as.matrix(distPAM)) == 10)
library(letsR)
?lets.distmat
library(letsR)
?lets.distmat
library(letsR)
?lets.distmat
?lets.distmat
library(letsR)
library(letsR)
library(letsR)
library(letsR)
?temÂ´p
?temp
data(PAM)
projection(PAM[[2]])
temp <- raster("C:/Users/Bruno/SkyDrive/Papers/Paper Miguel e Brad/old/variables/bio1.bil")
temp
?raster
projection(temp)==projection(PAM[[2]])
projection(temp) <- projection(PAM[[2]])
plot(temp)
?readALL
inMemory(temp)
fromDisk(temp)
temp <- readALL(temp)
temp <- raster(temp)
fromDisk(temp)
inMemory(temp)
temp
save(temp, file="temp.rda")
library(letsR)
data(temp)
temp
library(letsR)
data(temp)  # Global mean temperature
data(PAM)  # Phyllomedusa presence-absence matrix
PAM_temp <- lets.addvar(PAM, temp)
projection(temp)
projection(PAM)
?lets.presab
PAM <- lets.presab(Phyllomedusa, xmn = -93, xmx = -29,
ymn = -57, ymx = 15)
PAM
?PAM
save(PAM, file = "PAM.rda")
?lets.presab
library(letsR)
?lets.addvar
data(temp)  # Global mean temperature
data(PAM)  # Phyllomedusa presence-absence matrix
PAM_temp <- lets.addvar(PAM, temp)
PAM
summary(PAM)
projection(PAM)
projection(PAM[[2]])
projection(PAM[[2]])==projection(temp)
library(letsR)
data(temp)  # Global mean temperature
data(PAM)  # Phyllomedusa presence-absence matrix
PAM_temp <- lets.addvar(PAM, temp)
data(temp)
plot(temp)
temp <- raster("C:/Users/Bruno/SkyDrive/Papers/Paper Miguel e Brad/old/variables/bio1.bil")
projection(temp) <- projection(PAM[[2]])
temp
PAM_temp <- lets.addvar(PAM, temp)
PAM_temp
PAM_temp <- lets.addvar(PAM, temp, onlyvar=TRUE)
PAM_temp
head(PAM_temp)
??readALL
temp <- writeRaster(temp, filename='test', overwrite=TRUE)
inMemory(temp)
temp
temp <- temp + 0
temp
plot(temp)
save(temp, file = "temp.rda")
data(iucn)
iucn
IUCN <- iucn
save(IUCN, file = "IUCN.rda")
library(letsR)
data(temp)  # Global mean temperature
data(PAM)  # Phyllomedusa presence-absence matrix
PAM_temp <- lets.addvar(PAM, temp)
PAM_temp
plot(temp)
?temp
plot(temp)
plot(temp, rev(heat.colors(200)))
?lets.addvar
PAM_temp <- lets.addvar(PAM, temp, fun = sd)
PAM_temp <- lets.addvar(PAM, temp, fun = sd, onlyvar = TRUE)
pAM_temp
PAM_temp
data(temp)  # Global mean temperature
data(PAM)  # Phyllomedusa presence-absence matrix
# Mean temperature
PAM_temp_mean <- lets.addvar(PAM, temp)
# Standard deviation of temperature
PAM_temp_sd <- lets.addvar(PAM, temp, fun = sd, onlyvar = TRUE)
# Mean and SD in the PAM
PAM_temp_mean_sd <- cbind(PAM_temp_mean, PAM_temp_sd)
PAM_temp_mean_sd
paste(mean)
?get
mget(mean)
assign(mean)
as.character(mean)
toString(mean)
str(mean)
slotNames(mean)
mean@generic
mean@generic$1
mean@generic[[1]]
sd@generic[[1]]
str(sd)
cat(mean)
as.character(substitute(mean))
as.character(substitute(sd))
toString("a", as.character(substitute(sd)))
pate("a", as.character(substitute(sd)))
paste("a", as.character(substitute(sd)))
paste("a", as.character(substitute(sd)), sep="_")
paste(c("a", "b"), as.character(substitute(sd)), sep="_")
library(letsR)
data(temp)  # Global mean temperature
data(PAM)  # Phyllomedusa presence-absence matrix
# Mean temperature
PAM_temp_mean <- lets.addvar(PAM, temp)
# Standard deviation of temperature
PAM_temp_sd <- lets.addvar(PAM, temp, fun = sd, onlyvar = TRUE)
# Mean and SD in the PAM
PAM_temp_mean_sd <- cbind(PAM_temp_mean, PAM_temp_sd)
head(PAM_temp_mean_sd)
library(letsR)
?lets.addvar
data(iucn)
data(IUCN)
IUCN
tempstack <- stack(temp, temp)
tempstack
PAM_temp_mean <- lets.addvar(PAM, tempstack)
PAM_temp_mean
PAM_temp_mean <- lets.addvar(PAM, tempstack, fun = c(mean, sd))
library(testthat)
context("Test for lets.addvar")
data(PAM)
data(temp)
tempstack <- stack(temp, temp)
test_that("lets.addvar works fine", {
skip_on_cran()
PAM_temp_mean <- lets.addvar(PAM, temp)
expect_true(class(PAM_temp_mean) == "matrix")
expect_true(ncol(as.matrix(PAM_temp_mean)) == (ncol(PAM[[1]]) + 1))
})
test_that("lets.addvar works fine, different fun", {
skip_on_cran()
PAM_temp_mean <- lets.addvar(PAM, temp, fun = sd)
expect_true(class(PAM_temp_mean) == "matrix")
expect_true(ncol(as.matrix(PAM_temp_mean)) == (ncol(PAM[[1]]) + 1))
})
test_that("lets.addvar works fine, onlyvar = TRUE", {
skip_on_cran()
PAM_temp_mean <- lets.addvar(PAM, temp, onlyvar = TRUE)
expect_true(class(PAM_temp_mean) == "matrix")
expect_true(ncol(as.matrix(PAM_temp_mean)) == 1)
})
test_that("lets.addvar works fine, multiple rasters", {
skip_on_cran()
PAM_temp_mean <- lets.addvar(PAM, tempstack)
expect_true(class(PAM_temp_mean) == "matrix")
expect_true(ncol(as.matrix(PAM_temp_mean)) == (ncol(PAM[[1]]) + 2))
})
library(letsR)
?lets.distmat
update.packages(checkBuilt=TRUE, ask=FALSE)
