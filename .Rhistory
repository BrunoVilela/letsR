colnames(resu) <- c("Species", "x", "y")
return(resu)
}
ponto1 <- lets.midpoint(mat, planar=T)
ponto2 <- lets.midpoint(mat, planar=F)
ponto1
ponto2
pam
if(class(pam)=="PresenceAbsence"){
n <- ncol(pam$P)
species <- pam$S
pam2 <- pam$P
}else{
n <- ncol(pam)
species <- colnames(pam)[-(1:2)]
pam2 <- pam
}
xm <- numeric((n-2))
ym <- numeric((n-2))
i=3
pos <- which(pam2[,i]==1)
pos
a <- max(pam2[pos, 1])
a
b <- min(pam2[pos, 1])
b
c <- max(pam2[pos, 2])
c
d <- min(pam2[pos, 2])
d
dis <- geomean(rbind(cbind(a,c), cbind(c,d)))
dis
dis[1, 1]
dis[1, 2]
library(geosphere)
lets.midpoint <- function(pam, planar=TRUE){
if(class(pam)=="PresenceAbsence"){
n <- ncol(pam$P)
species <- pam$S
pam2 <- pam$P
}else{
n <- ncol(pam)
species <- colnames(pam)[-(1:2)]
pam2 <- pam
}
xm <- numeric((n-2))
ym <- numeric((n-2))
for(i in 3:n){
pos <- which(pam2[,i]==1)
a <- max(pam2[pos, 1])
b <- min(pam2[pos, 1])
c <- max(pam2[pos, 2])
d <- min(pam2[pos, 2])
if(planar==F){
dis <- geomean(rbind(cbind(a,c), cbind(c,d)))
xm[(i-2)] <- dis[1, 1]
ym[(i-2)] <- dis[1, 2]
}
if(planar==T){
xm[(i-2)] <- mean(c(a,b))
ym[(i-2)] <- mean(c(c,d))
}
}
resu <- as.data.frame(cbind(species, xm, ym))
colnames(resu) <- c("Species", "x", "y")
return(resu)
}
ponto1 <- lets.midpoint(mat, planar=T)
ponto2 <- lets.midpoint(mat, planar=F)
ponto1
ponto2
plot(mat, name=mat$S[2])
points(x=as.numeric(ponto1[2,2]),y=as.numeric(ponto1[2,3]), cex=2, pch=20, col="purple")
ponto1 <- as.matrix(ponto1)
ponto2 <- as.matrix(ponto2)
points(x=as.numeric(ponto1[2,2]),y=as.numeric(ponto1[2,3]), cex=2, pch=20, col="purple")
points(x=as.numeric(ponto2[2,2]),y=as.numeric(ponto2[2,3]), cex=2, pch=20, col="red")
r <- raster()
values(r) <- 1
plot(r, col="white")
map(add=T)
ponto1 <- as.matrix(ponto1)
ponto2 <- as.matrix(ponto2)
points(x=as.numeric(ponto1[2,2]),y=as.numeric(ponto1[2,3]), cex=2, pch=20, col="purple")
points(x=as.numeric(ponto2[2,2]),y=as.numeric(ponto2[2,3]), cex=2, pch=20, col="red")
xy <- cbind(x=c(-179,179, 177), y=c(12,14,16))
xy
geomean(xy)
xy
geomean(xy[1:2,]
)
rbind(cbind(a,c), cbind(c,d))
max(pam2[pos, 1])
min(pam2[pos, 1])
max(pam2[pos, 2])
min(pam2[pos, 2])
cbind(c(a,b), c(c,d))
library(geosphere)
lets.midpoint <- function(pam, planar=TRUE){
if(class(pam)=="PresenceAbsence"){
n <- ncol(pam$P)
species <- pam$S
pam2 <- pam$P
}else{
n <- ncol(pam)
species <- colnames(pam)[-(1:2)]
pam2 <- pam
}
xm <- numeric((n-2))
ym <- numeric((n-2))
for(i in 3:n){
pos <- which(pam2[,i]==1)
a <- max(pam2[pos, 1])
b <- min(pam2[pos, 1])
c <- max(pam2[pos, 2])
d <- min(pam2[pos, 2])
if(planar==F){
dis <- geomean(cbind(c(a,b), c(c,d)))
xm[(i-2)] <- dis[1, 1]
ym[(i-2)] <- dis[1, 2]
}
if(planar==T){
xm[(i-2)] <- mean(c(a,b))
ym[(i-2)] <- mean(c(c,d))
}
}
resu <- as.data.frame(cbind(species, xm, ym))
colnames(resu) <- c("Species", "x", "y")
return(resu)
}
ponto1 <- lets.midpoint(mat, planar=T)
ponto2 <- lets.midpoint(mat, planar=F)
r <- raster()
values(r) <- 1
plot(r, col="white")
map(add=T)
ponto1 <- as.matrix(ponto1)
ponto2 <- as.matrix(ponto2)
points(x=as.numeric(ponto1[2,2]),y=as.numeric(ponto1[2,3]), cex=2, pch=20, col="purple")
points(x=as.numeric(ponto2[2,2]),y=as.numeric(ponto2[2,3]), cex=2, pch=20, col="red")
ponto1
ponto2
points(x=as.numeric(ponto1[2,2]),y=as.numeric(ponto1[2,3]), cex=2, pch=20, col="purple")
points(x=as.numeric(ponto2[2,2]),y=as.numeric(ponto2[2,3]), cex=2, pch=20, col="red")
plot(mat, name=mat$S[2])
dis <- geomean(cbind(c(a,b), c(c,d)))
dis
midPoint(c(0,0),c(90,90))
library(geosphere)
lets.midpoint <- function(pam, planar=TRUE){
if(class(pam)=="PresenceAbsence"){
n <- ncol(pam$P)
species <- pam$S
pam2 <- pam$P
}else{
n <- ncol(pam)
species <- colnames(pam)[-(1:2)]
pam2 <- pam
}
xm <- numeric((n-2))
ym <- numeric((n-2))
for(i in 3:n){
pos <- which(pam2[,i]==1)
a <- max(pam2[pos, 1])
b <- min(pam2[pos, 1])
c <- max(pam2[pos, 2])
d <- min(pam2[pos, 2])
if(planar==F){
dis <- midPoint(cbind(c(a,b), c(c,d)))
xm[(i-2)] <- dis[1, 1]
ym[(i-2)] <- dis[1, 2]
}
if(planar==T){
xm[(i-2)] <- mean(c(a,b))
ym[(i-2)] <- mean(c(c,d))
}
}
resu <- as.data.frame(cbind(species, xm, ym))
colnames(resu) <- c("Species", "x", "y")
return(resu)
}
ponto1 <- lets.midpoint(mat, planar=T)
ponto1
ponto2 <- lets.midpoint(mat, planar=F)
?midPoint
library(geosphere)
lets.midpoint <- function(pam, planar=TRUE){
if(class(pam)=="PresenceAbsence"){
n <- ncol(pam$P)
species <- pam$S
pam2 <- pam$P
}else{
n <- ncol(pam)
species <- colnames(pam)[-(1:2)]
pam2 <- pam
}
xm <- numeric((n-2))
ym <- numeric((n-2))
for(i in 3:n){
pos <- which(pam2[,i]==1)
a <- max(pam2[pos, 1])
b <- min(pam2[pos, 1])
c <- max(pam2[pos, 2])
d <- min(pam2[pos, 2])
if(planar==F){
dis <- midPoint(c(a,c), c(b,d))
xm[(i-2)] <- dis[1, 1]
ym[(i-2)] <- dis[1, 2]
}
if(planar==T){
xm[(i-2)] <- mean(c(a,b))
ym[(i-2)] <- mean(c(c,d))
}
}
resu <- as.data.frame(cbind(species, xm, ym))
colnames(resu) <- c("Species", "x", "y")
return(resu)
}
ponto1 <- lets.midpoint(mat, planar=T)
ponto2 <- lets.midpoint(mat, planar=F)
ponto1
ponto2
?geomean
library(geosphere)
lets.midpoint <- function(pam, planar=TRUE){
if(class(pam)=="PresenceAbsence"){
n <- ncol(pam$P)
species <- pam$S
pam2 <- pam$P
}else{
n <- ncol(pam)
species <- colnames(pam)[-(1:2)]
pam2 <- pam
}
xm <- numeric((n-2))
ym <- numeric((n-2))
for(i in 3:n){
pos <- which(pam2[,i]==1)
a <- max(pam2[pos, 1])
b <- min(pam2[pos, 1])
c <- max(pam2[pos, 2])
d <- min(pam2[pos, 2])
if(planar==F){
dis <- geomean(cbind(c(a,b), c(c,d)))
xm[(i-2)] <- dis[1, 1]
ym[(i-2)] <- dis[1, 2]
}
if(planar==T){
xm[(i-2)] <- mean(c(a,b))
ym[(i-2)] <- mean(c(c,d))
}
}
resu <- as.data.frame(cbind(species, xm, ym))
colnames(resu) <- c("Species", "x", "y")
return(resu)
}
ponto1 <- lets.midpoint(mat, planar=T)
ponto2 <- lets.midpoint(mat, planar=F)
ponto1
ponto2
?midpoint
?midPoint
?geomean
plot(mat, name=mat$S[2])
resu1 <- lets.presab.birds("C:/Users/Bruno/Documents/testeb/Neosittidae",
resol=2, origin=c(1, 2), seasonal=c(1, 2),
presence=c(1, 2, 3), count=TRUE)
plot(resu1)
ponto1 <- lets.midpoint(resu1, planar=T)
ponto2 <- lets.midpoint(resu1, planar=F)
ponto1
ponto2
library(geosphere)
lets.midpoint <- function(pam, planar=TRUE){
if(class(pam)=="PresenceAbsence"){
n <- ncol(pam$P)
species <- pam$S
pam2 <- pam$P
}else{
n <- ncol(pam)
species <- colnames(pam)[-(1:2)]
pam2 <- pam
}
xm <- numeric((n-2))
ym <- numeric((n-2))
for(i in 3:n){
pos <- which(pam2[,i]==1)
a <- max(pam2[pos, 1])
b <- min(pam2[pos, 1])
c <- max(pam2[pos, 2])
d <- min(pam2[pos, 2])
if(planar==F){
dis <- midPoint(c(a,c), c(b,d))
xm[(i-2)] <- dis[1, 1]
ym[(i-2)] <- dis[1, 2]
}
if(planar==T){
xm[(i-2)] <- mean(c(a,b))
ym[(i-2)] <- mean(c(c,d))
}
}
resu <- as.data.frame(cbind(species, xm, ym))
colnames(resu) <- c("Species", "x", "y")
return(resu)
}
ponto1 <- lets.midpoint(resu1, planar=T)
ponto2 <- lets.midpoint(resu1, planar=F)
ponto1
ponto2
plot(resu1, name=resu1$S[1])
pam=resu1
planar=F
if(class(pam)=="PresenceAbsence"){
n <- ncol(pam$P)
species <- pam$S
pam2 <- pam$P
}else{
n <- ncol(pam)
species <- colnames(pam)[-(1:2)]
}
ym <- numeric((n-2))
pos <- which(pam2[,i]==1)
a <- max(pam2[pos, 1])
for(i in 3:n){
xm <- numeric((n-2))
b <- min(pam2[pos, 1])
pam2 <- pam
c <- max(pam2[pos, 2])
d <- min(pam2[pos, 2])
if(planar==F){
dis <- midPoint(c(a,c), c(b,d))
xm[(i-2)] <- dis[1, 1]
ym[(i-2)] <- dis[1, 2]
}
if(planar==T){
xm[(i-2)] <- mean(c(a,b))
ym[(i-2)] <- mean(c(c,d))
}
}
xm
ym
if(class(pam)=="PresenceAbsence"){
n <- ncol(pam$P)
species <- pam$S
pam2 <- pam$P
}else{
n <- ncol(pam)
species <- colnames(pam)[-(1:2)]
pam2 <- pam
}
xm <- numeric((n-2))
ym <- numeric((n-2))
for(i in 3:n){
pos <- which(pam2[,i]==1)
a <- max(pam2[pos, 1])
b <- min(pam2[pos, 1])
c <- max(pam2[pos, 2])
d <- min(pam2[pos, 2])
if(planar==F){
dis <- midPoint(c(a,c), c(b,d))
xm[(i-2)] <- dis[1, 1]
ym[(i-2)] <- dis[1, 2]
}
if(planar==T){
xm[(i-2)] <- mean(c(a,b))
ym[(i-2)] <- mean(c(c,d))
}
}
resu <- as.data.frame(cbind(species, xm, ym))
colnames(resu) <- c("Species", "x", "y")
xm
ym
a
b
c
d
ponto2 <- lets.midpoint(resu1, planar=F)
ponto2
ponto1 <- lets.midpoint(resu1, planar=T)
ponto1
ponto1
midPoint
.pointsToMatrix
.pointsToMatrix(p1)
pointsToMatrix
.pointsToMatrix
pointsToMatrix(p1) * toRad
data(teste)
mat <- lets.presab(teste)
pam <-mat$P
ponto1 <- lets.midpoint(resu1, planar=T)
ponto2 <- lets.midpoint(resu1, planar=F)
r <- raster()
values(r) <- 1
plot(r, col="white")
map(add=T)
ponto1 <- as.matrix(ponto1)
ponto2 <- as.matrix(ponto2)
points(x=as.numeric(ponto1[2,2]),y=as.numeric(ponto1[2,3]), cex=2, pch=20, col="purple")
points(x=as.numeric(ponto2[2,2]),y=as.numeric(ponto2[2,3]), cex=2, pch=20, col="red")
plot(mat, name=mat$S[2])
plot(resu1, name=mat$S[2])
plot(resu1, name=resu1$S[2])
points(x=as.numeric(ponto1[2,2]),y=as.numeric(ponto1[2,3]), cex=2, pch=20, col="purple")
points(x=as.numeric(ponto2[2,2]),y=as.numeric(ponto2[2,3]), cex=2, pch=20, col="red")
plot(resu1, name=resu1$S[1])
points(x=as.numeric(ponto1[1,2]),y=as.numeric(ponto1[1,3]), cex=2, pch=20, col="purple")
points(x=as.numeric(ponto2[1,2]),y=as.numeric(ponto2[1,3]), cex=2, pch=20, col="red")
plot(resu1, name=resu1$S[1])
points(x=as.numeric(ponto1[1,2]),y=as.numeric(ponto1[1,3]), cex=2, pch=20, col="purple")
points(x=as.numeric(ponto2[1,2]),y=as.numeric(ponto2[1,3]), cex=2, pch=20, col="green")
n=137000000
r=0.023
t=1975-1953
t
n0=137000000
r=0.023
t0=1975
t1=1953
cr <- function(n0, r, t0, t1){
t <- t1-t0
nt <- n0*exp((r*t))
return(nt)
}
cr(n0, r, t0, t1)
t <- t1-t0
t
t1
t <- t1-t0
t
t
t <- t1-t0
t
t1=1975
t0=1953
t <- t1-t0
t
nt <- n0*exp((r*t))
nt
N0 <- 1
tim <- 1:22
nt <- N0*l^tim
l <- r+1
N0 <- 1
tim <- 1:22
nt <- N0*l^tim
nt
nt <- n0*l^tim
nt
tim <- 0:22
nt <- n0*l^tim
nt
tim <- 0:23
nt <- n0*l^tim
nt
l <- r
tim <- 0:23
nt <- n0*l^tim
nt
dob <- function(r, mult){
t <- ln(mult)/r
return(t)
}
dob(r, 2)
dob <- function(r, mult){
t <- log(mult)/r
return(t)
}
dob(r, 2)
cr2 <- function(n0, lambda, t){
n <- n0*lambda^t
return(n)
}
cr2(n0, lambda, t)
lambda=1
n0=1000
lambda=1
t=3
cr2 <- function(n0, lambda, t){
n <- n0*lambda^t
return(n)
}
cr2(n0, lambda, t)
cr2 <- function(n0, lambda, t){
n <- n0*(lambda^t)
return(n)
}
cr2(n0, lambda, t)
100*0.111
source(1:1000, echo=T)
source(1:1000)
1:10000
1:100000
getOption(&quot;max.print&quot;)
options(max.print=10000)
1:100000
print(1:100000)
n=100
r=0.111
n*r
cr(n0, r, t0, 1954:1976)
n0=137000000
r=0.023
t1=1975
t0=1953
cr(n0, r, t0, 1954:1976)
plot(cr(n0, r, t0, 1954:1976))
plot(cr(n0, r, t0, 1954:2000))
plot(cr(n0, 2, t0, 1954:2000))
plot(cr(n0, 1, t0, 1954:2000))
plot(cr(n0, 0.4, t0, 1954:2000))
plot(cr(n0, 0.1, t0, 1954:2000))
