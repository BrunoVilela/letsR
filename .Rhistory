m <- matrix(c(0,1), ncol=5, nrow=5)
c<-1:5
m*c
colSums(PAM$P[, -(1:2)]*cellsize2)
cellsize2 <- extract(r, x$P[, 1:2])
cellsize2 <- extract(r, PAM$P[, 1:2])
colSums(PAM$P[, -(1:2)]*cellsize2)
Range_Size <- colSums(PAM$P[, -(1:2)]*cellsize2)
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
Range_Size
Phyllomedusa
#' Calculate species range size
#'
#' @author Bruno Vilela
#'
#' @description This function calculate species range size from a PresenceAbsence object or direct from the species shapefiles.
#'
#' @param x a PresenceAbsence object or an SpatialPolygonsDataFrame.
#' @param species_name  species name in the same other as in the SpatialPolygonsDataFrame (only needed if x is a SpatialPolygonsDataFrame).
#' @param "geographical" or "planar". Indicate wheter the shapefile has geographical or planar coordinates(only needed if x is a SpatialPolygonsDataFrame).
#' @param units "cell" or "squaremeters". Indicate if the units wanted are in number of cells occupied or in square meters(only needed if x is a PresenceAbsence object).
#'
#' @return The result is a matrix with the range size of each species.
#' If the range size accounts for the earth curvature (Yes or No) and it's unit
#' may differ for each argument combination:
#' 1) SpatialPolygonsDataFrame & geographical = Square meters. Yes.
#' 2) SpatialPolygonsDataFrame & planar = same units as the coordinates. No.
#' 3) PresenceAbsence & cell = number of cells. No.
#' 4) PresenceAbsence & squaremeters = squaremeters. Yes.
#'
#' @examples \dontrun{
#' # SpatialPolygonsDataFrame & geographical
#' data(Phyllomedusa)
#' rangesize <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="geographic")
#'
#' # SpatialPolygonsDataFrame & planar
#' data(Phyllomedusa)
#' rangesize <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="planar")
#'
#' # PresenceAbsence & cell
#' data(PAM)
#' rangesize <- lets.rangesize(x=PAM, units="cell")
#'
#' # PresenceAbsence & squaremeters
#' data(PAM)
#' rangesize <- lets.rangesize(x=PAM, units="squaremeters")
#' }
#'
#'
#' @export
lets.rangesize <- function(x, species_name=x@data[, 1],
coordinates="geographic",
units="cells"){
if(class(x)=="PresenceAbsence"){
if(units=="cell"){
Range_Size <- colSums(x$P[, -(1:2)])
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
if(units=="squaremeter"){
grid <- rasterToPolygons(x$R)
cellsize <- areaPolygon(grid)
r <- rasterize(grid, x$R, cellsize)
cellsize2 <- extract(r, x$P[, 1:2])
Range_Size <- colSums(PAM$P[, -(1:2)]*cellsize2)
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
}
if(class(x)=="SpatialPolygonsDataFrame"){
if(coordinates=="planar"){
Range_Size <- sapply(slot(x, "polygons"), slot, "area")
Range_Size <- as.matrix(Range_Size)
rownames(Range_Size) <- species_name
return(Range_Size)
}
if(coordinates=="geographic"){
Range_Size <- areaPolygon(Phyllomedusa)
Range_Size <- as.matrix(Range_Size)
rownames(Range_Size) <- species_name
return(Range_Size)
}
}
}
data(Phyllomedusa)
rangesize <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="planar")
rangesize
#' Calculate species range size
#'
#' @author Bruno Vilela
#'
#' @description This function calculate species range size from a PresenceAbsence object or direct from the species shapefiles.
#'
#' @param x a PresenceAbsence object or an SpatialPolygonsDataFrame.
#' @param species_name  species name in the same other as in the SpatialPolygonsDataFrame (only needed if x is a SpatialPolygonsDataFrame).
#' @param "geographical" or "planar". Indicate wheter the shapefile has geographical or planar coordinates(only needed if x is a SpatialPolygonsDataFrame).
#' @param units "cell" or "squaremeters". Indicate if the units wanted are in number of cells occupied or in square meters(only needed if x is a PresenceAbsence object).
#'
#' @return The result is a matrix with the range size of each species.
#' If the range size accounts for the earth curvature (Yes or No) and it's unit
#' may differ for each argument combination:
#' 1) SpatialPolygonsDataFrame & geographical = Square meters. Yes.
#' 2) SpatialPolygonsDataFrame & planar = same units as the coordinates. No.
#' 3) PresenceAbsence & cell = number of cells. No.
#' 4) PresenceAbsence & squaremeters = squaremeters. Yes.
#'
#' @examples \dontrun{
#' # SpatialPolygonsDataFrame & geographical
#' data(Phyllomedusa)
#' rangesize <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="geographic")
#'
#' # SpatialPolygonsDataFrame & planar
#' data(Phyllomedusa)
#' rangesize <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="planar")
#'
#' # PresenceAbsence & cell
#' data(PAM)
#' rangesize <- lets.rangesize(x=PAM, units="cell")
#'
#' # PresenceAbsence & squaremeters
#' data(PAM)
#' rangesize <- lets.rangesize(x=PAM, units="squaremeters")
#' }
#'
#'
#' @export
lets.rangesize <- function(x, species_name=x@data[, 1],
coordinates="geographic",
units="cells"){
if(class(x)=="PresenceAbsence"){
if(units=="cell"){
Range_Size <- colSums(x$P[, -(1:2)])
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
if(units=="squaremeter"){
grid <- rasterToPolygons(x$R)
cellsize <- areaPolygon(grid)
r <- rasterize(grid, x$R, cellsize)
cellsize2 <- extract(r, x$P[, 1:2])
Range_Size <- colSums(PAM$P[, -(1:2)]*cellsize2)
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
}
if(class(x)=="SpatialPolygonsDataFrame"){
if(coordinates=="planar"){
Range_Size <- sapply(slot(x, "polygons"), slot, "area")
Range_Size <- as.matrix(Range_Size)
rownames(Range_Size) <- species_name
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
if(coordinates=="geographic"){
Range_Size <- areaPolygon(Phyllomedusa)
Range_Size <- as.matrix(Range_Size)
rownames(Range_Size) <- species_name
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
}
}
data(Phyllomedusa)
rangesize <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="geographic")
head(rangesize)
data(Phyllomedusa)
rangesize <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="planar")
head(rangesize)
rangesize <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="geographic")
rangesize2 <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="planar")
data(PAM)
rangesize3 <- lets.rangesize(x=PAM, units="cell")
data(PAM)
rangesize4 <- lets.rangesize(x=PAM, units="squaremeters")
head(rangeize4)
head(rangesize4)
head(rangesize3)
rangesize3
x=PAM
rangesize4 <- lets.rangesize(x=PAM, units="squaremeter")
rangesize4
plot(rangesize, rangesize2)
plot(rangesize, rangesize3)
dim(rangesize)
dim(rangesize3)
rownames(rangesize)
duplicated(rownames(rangesize))
plot(rangesize3, rangesize4)
plot(rangesize1, rangesize2)
plot(rangesize, rangesize2)
plot(rangesize3, rangesize4)
aggregate(rangesize[,1]~rownames(rangesize),FUN=sum)
lets.rangesize <- function(x, species_name=x@data[, 1],
coordinates="geographic",
units="cells"){
if(class(x)=="PresenceAbsence"){
if(units=="cell"){
Range_Size <- colSums(x$P[, -(1:2)])
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
if(units=="squaremeter"){
grid <- rasterToPolygons(x$R)
cellsize <- areaPolygon(grid)
r <- rasterize(grid, x$R, cellsize)
cellsize2 <- extract(r, x$P[, 1:2])
Range_Size <- colSums(PAM$P[, -(1:2)]*cellsize2)
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
}
if(class(x)=="SpatialPolygonsDataFrame"){
if(coordinates=="planar"){
Range_Size <- sapply(slot(x, "polygons"), slot, "area")
Range_Size <- as.matrix(Range_Size)
rownames(Range_Size) <- species_name
colnames(Range_Size) <- 'Range_size'
Range_Size2 <- aggregate(Range_Size[, 1]~species_name), FUN=sum)
Range_Size <- Range_Size2[, 2]
rownames(Range_Size) <- Range_Size2[, 1]
return(Range_Size)
}
if(coordinates=="geographic"){
Range_Size <- areaPolygon(Phyllomedusa)
Range_Size <- as.matrix(Range_Size)
rownames(Range_Size) <- species_name
colnames(Range_Size) <- 'Range_size'
Range_Size2 <- aggregate(Range_Size[, 1]~species_name), FUN=sum)
Range_Size <- Range_Size2[, 2]
rownames(Range_Size) <- Range_Size2[, 1]
return(Range_Size)
}
}
}
lets.rangesize <- function(x, species_name=x@data[, 1],
coordinates="geographic",
units="cells"){
if(class(x)=="PresenceAbsence"){
if(units=="cell"){
Range_Size <- colSums(x$P[, -(1:2)])
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
if(units=="squaremeter"){
grid <- rasterToPolygons(x$R)
cellsize <- areaPolygon(grid)
r <- rasterize(grid, x$R, cellsize)
cellsize2 <- extract(r, x$P[, 1:2])
Range_Size <- colSums(PAM$P[, -(1:2)]*cellsize2)
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
}
if(class(x)=="SpatialPolygonsDataFrame"){
if(coordinates=="planar"){
Range_Size <- sapply(slot(x, "polygons"), slot, "area")
Range_Size <- as.matrix(Range_Size)
rownames(Range_Size) <- species_name
colnames(Range_Size) <- 'Range_size'
Range_Size2 <- aggregate(Range_Size[, 1]~species_name, FUN=sum)
Range_Size <- Range_Size2[, 2]
rownames(Range_Size) <- Range_Size2[, 1]
return(Range_Size)
}
if(coordinates=="geographic"){
Range_Size <- areaPolygon(Phyllomedusa)
Range_Size <- as.matrix(Range_Size)
rownames(Range_Size) <- species_name
colnames(Range_Size) <- 'Range_size'
Range_Size2 <- aggregate(Range_Size[, 1]~species_name, FUN=sum)
Range_Size <- Range_Size2[, 2]
rownames(Range_Size) <- Range_Size2[, 1]
return(Range_Size)
}
}
}
data(Phyllomedusa)
rangesize <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="geographic")
data(Phyllomedusa)
rangesize2 <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="planar")
data(PAM)
rangesize3 <- lets.rangesize(x=PAM, units="cell")
data(PAM)
rangesize4 <- lets.rangesize(x=PAM, units="squaremeter")
lets.rangesize <- function(x, species_name=x@data[, 1],
coordinates="geographic",
units="cells"){
if(class(x)=="PresenceAbsence"){
if(units=="cell"){
Range_Size <- colSums(x$P[, -(1:2)])
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
if(units=="squaremeter"){
grid <- rasterToPolygons(x$R)
cellsize <- areaPolygon(grid)
r <- rasterize(grid, x$R, cellsize)
cellsize2 <- extract(r, x$P[, 1:2])
Range_Size <- colSums(PAM$P[, -(1:2)]*cellsize2)
Range_Size <- as.matrix(Range_Size)
colnames(Range_Size) <- 'Range_size'
return(Range_Size)
}
}
if(class(x)=="SpatialPolygonsDataFrame"){
if(coordinates=="planar"){
Range_Size <- sapply(slot(x, "polygons"), slot, "area")
Range_Size <- as.matrix(Range_Size)
rownames(Range_Size) <- species_name
colnames(Range_Size) <- 'Range_size'
Range_Size2 <- aggregate(Range_Size[, 1]~species_name, FUN=sum)
Range_Size <- as.matrix(Range_Size2[, 2])
rownames(Range_Size) <- Range_Size2[, 1]
return(Range_Size)
}
if(coordinates=="geographic"){
Range_Size <- areaPolygon(Phyllomedusa)
Range_Size <- as.matrix(Range_Size)
rownames(Range_Size) <- species_name
colnames(Range_Size) <- 'Range_size'
Range_Size2 <- aggregate(Range_Size[, 1]~species_name, FUN=sum)
Range_Size <- as.matrix(Range_Size2[, 2])
rownames(Range_Size) <- Range_Size2[, 1]
return(Range_Size)
}
}
}
data(Phyllomedusa)
rangesize <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="geographic")
data(Phyllomedusa)
rangesize2 <- lets.rangesize(x=Phyllomedusa, species_name=Phyllomedusa@data[, 1], coordinates="planar")
plot(rangesize, rangesize2)
plot(rangesize, rangesize3)
plot(rangesize, rangesize4)
plot(rangesize2, rangesize3)
plot(rangesize2, rangesize4)
plot(rangesize3, rangesize4)
rm(list=ls())
library(letsR)
library(letsR)
data(PAM)
field <- lets.field(PAM, range, PAM$S, weigth=TRUE)
range <- lets.rangesize(x=PAM, units="cell")
field <- lets.field(PAM, range, PAM$S, weigth=TRUE)
field
rm(list=ls())
library(letsR)
library(letsR)
library(letsR)
library(letsR)
library(letsR)
library(letsR)
library(letsR)
library(letsR)
input <- "panthera onca"
input <- gsub(as.matrix(input), pattern=" ", replacement="-")
input
input <- gsub(as.matrix(input), pattern="_", replacement="-")
input
input <- c("panthera onca", "homo sapiens")
input <- gsub(as.matrix(input), pattern=" ", replacement="-")
input
input <- gsub(as.matrix(input), pattern="_", replacement="-")
input <- gsub(as.matrix(input), pattern="_", replacement="-")
input
library(letsR)
install.packages("rgdal")
library(letsR)
?distCoisine
??distCoisine
??distCosine
distCosine(c(0,0),c(90,90))
library(geosphere)
distCosine(c(0,0),c(90,90))
library(fields)
rdist.earth(c(0,0),c(90,90))
rdist.earth(cbind(0,0),cbind(90,90))
distCosine(c(0,0),c(90,90))
rdist.earth(cbind(0,0),cbind(90,90), miles=F)
?distCosine
?rdist.eaarth
?rdist.earth
library(letsR)
library(letsR)
library(letsR)
7*1471
(7*1471)/60
(7*1471)/360
(7*1471)/60
((7*1471)/60)/60
library(raster)
primpod <- raster("C:/Users/Bruno/Downloads/hapctnpp_grid/hapctnpp_grid/dblbnd.adf")
primpod <- raster("C:/Users/Bruno/Downloads/hapctnpp_grid/hapctnpp_grid/dblbnd.adf")
plot(primpod)
primpo
primpod
values.pp <- log(values(primpod))
primpod.log <- primpod
primpod.log <- primpod
values(primpod.log) <- values.pp
plot(primpod)
table(values(primpod))
summary(values(primpod))
hist(values(primpod))
values.pp <- log(values(primpod))
hist(values.pp)
plot(primpod.log)
records <- read.table("C:/Users/Bruno/Downloads/coord_locais_nri.txt")
records
plot(primpod.log, main="Primary productivity (log)")
SpatialPoints(record)
SpatialPoints(records)
plot(SpatialPoints(records))
plot(primpod.log, main="Primary productivity (log)")
points(SpatialPoints(records))
map()
maps()
library(maps)
maps()
map()
records.sp <- SpatialPoints(records)
point(records.sp, col="red", pch=16)
points(records.sp, col="red", pch=16)
points(records.sp, col="red", pch=1)
map()
points(records.sp, col="red", pch=1)
points(records.sp, col="red", pch=16, border="black")
map()
points(records.sp, col="red", pch=23, border="black")
map()
points(records.sp, col="red", pch=23, bg="black")
map()
points(records.sp, col="black", pch=20, bg="red")
```{r}
map()
points(records.sp, col="black", pch=1, bg="red")
map()
points(records.sp, col="black", pch=1, bg="red")
points(records.sp, col="black", pch=23, bg="red")
extract(primpod, records.sp)
primpod.bylocal <- extract(primpod, records.sp)
Primary_Production <- extract(primpod, records.sp)
cbind(records, Primary_Production)
getwd()
mat1 <- read.table("C:/Users/Bruno/Downloads/mat1.txt")
mat1
mat2 <- read.table("C:/Users/Bruno/Downloads/mat2.txt")
mat2
which(mat1[, 1]%in%mat2[, 1] & mat1[, 2]%in%mat2[, 2])
pos <- which(mat1[, 1]%in%mat2[, 1] & mat1[, 2]%in%mat2[, 2])
mat.final <- mat1[, pos]
mat.final <- mat1[pos, ]
mat.final
dim(mat1)
dim(mat.final)
pos <- which(mat2[, 1]%in%mat1[, 1] & mat2[, 2]%in%mat1[, 2])
mat.final <- mat2[pos, ]
mat.final
dim(mat.final)
pos
dim(mat.final)
pos <- which(mat2[, 1]%in%mat1[, 1] && mat2[, 2]%in%mat1[, 2])
mat.final <- mat2[pos, ]
dim(mat.final)
mat2%in%mat1
mat1 <- read.table("C:/Users/Bruno/Downloads/mat1.txt", sep=",")
mat2 <- read.table("C:/Users/Bruno/Downloads/mat2.txt", sep=",")
mat1
mat1 <- read.table("C:/Users/Bruno/Downloads/mat1.txt")
mat2 <- read.table("C:/Users/Bruno/Downloads/mat2.txt")
apply(mat1, 1, paste)
apply(mat1, 2, paste)
library(raster)
pos <- which(SpatialPoints(mat1) %in% SpatialPoints(mat2))
SpatialPoints(mat1) %in% SpatialPoints(mat2)
install.packages(compare)
library(compare)
install.packages("compare")
library(compare)
comparison <- compare(mat1,mat2,allowAll=TRUE)
comparison
comparison <- compare(mat1,mat2)
comparison
mat1 <- read.table("C:/Users/Bruno/Downloads/mat1.txt")
mat2 <- read.table("C:/Users/Bruno/Downloads/mat2.txt")
comparison <- compare(mat1, mat2)
source('~/.active-rstudio-document', echo=TRUE)
comparison
mat1.2 <- paste(mat1[,1], mat1[,2])
mat1.2
mat1
mat2.2 <- paste(mat2[,1], mat2[,2])
pos <- which(mat1.2 %in% mat2.1)
pos <- which(mat1.2 %in% mat2.2)
mat.final <- mat1[pos, ]
mat.final
mat1.2 %in% mat2.2
pos2 <- which(mat2.2 %in% mat1.2)
mat.final2 <- mat2[pos2, ]
mat.final2
dim(mat.final2)
mat.final2
