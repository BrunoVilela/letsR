correl <- lets.correl(x, y, z, equidistant, plot)
x <- rnorm(nrow(PAM[[1]]))[1:N]
y <- rdist.earth(PAM[[1]][1:N, 1:2])
z <- 20
equidistant <- TRUE
plot <- TRUE
correl <- lets.correl(x, y, z, equidistant, plot)
x <- rnorm(nrow(PAM[[1]]))[1:N]
y <- rdist.earth(PAM[[1]][1:N, 1:2])
z <- 20
equidistant <- TRUE
plot <- TRUE
correl <- lets.correl(x, y, z, equidistant, plot)
x <- rnorm(nrow(PAM[[1]]))[1:N]
y <- rdist.earth(PAM[[1]][1:N, 1:2])
z <- 20
equidistant <- TRUE
plot <- TRUE
correl <- lets.correl(x, y, z, equidistant, plot)
x <- rnorm(nrow(PAM[[1]]))[1:N]
y <- rdist.earth(PAM[[1]][1:N, 1:2])
z <- 20
equidistant <- TRUE
plot <- TRUE
correl <- lets.correl(x, y, z, equidistant, plot)
x <- rnorm(nrow(PAM[[1]]))[1:N]
y <- rdist.earth(PAM[[1]][1:N, 1:2])
z <- 20
equidistant <- TRUE
plot <- TRUE
correl <- lets.correl(x, y, z, equidistant, plot)
x <- rnorm(nrow(PAM[[1]]))[1:N]
y <- rdist.earth(PAM[[1]][1:N, 1:2])
z <- 20
equidistant <- TRUE
plot <- TRUE
correl <- lets.correl(x, y, z, equidistant, plot)
x <- rnorm(nrow(PAM[[1]]))[1:N]
y <- rdist.earth(PAM[[1]][1:N, 1:2])
z <- 20
equidistant <- TRUE
plot <- TRUE
correl <- lets.correl(x, y, z, equidistant, plot)
x <- rnorm(nrow(PAM[[1]]))[1:N]
y <- rdist.earth(PAM[[1]][1:N, 1:2])
z <- 20
equidistant <- TRUE
plot <- TRUE
correl <- lets.correl(x, y, z, equidistant, plot)
x <- rnorm(nrow(PAM[[1]]))[1:N]
y <- rdist.earth(PAM[[1]][1:N, 1:2])
z <- 50
equidistant <- TRUE
plot <- TRUE
correl <- lets.correl(x, y, z, equidistant, plot)
x <- rnorm(nrow(PAM[[1]]))[1:N]
y <- rdist.earth(PAM[[1]][1:N, 1:2])
z <- 50
equidistant <- TRUE
plot <- TRUE
correl <- lets.correl(x, y, z, equidistant, plot)
correl
# NULL distribution, so expect Moran's to be ~0
library(fields)
N <- 100
x <- rnorm(nrow(PAM[[1]]))[1:N]
y <- rdist.earth(PAM[[1]][1:N, 1:2])
z <- 100
equidistant <- TRUE
plot <- TRUE
correl <- lets.correl(x, y, z, equidistant, plot)
N <- 30
x <- rnorm(nrow(PAM[[1]]))[1:N]
y <- rdist.earth(PAM[[1]][1:N, 1:2])
z <- 100
equidistant <- TRUE
plot <- TRUE
correl <- lets.correl(x, y, z, equidistant, plot)
correl
N <- 200
x <- rnorm(nrow(PAM[[1]]))[1:N]
y <- rdist.earth(PAM[[1]][1:N, 1:2])
z <- 100
equidistant <- TRUE
plot <- FALSE
correl <- lets.correl(x, y, z, equidistant, plot)
correl
correl <- lets.correl(cbind(x, x, x), y, z, equidistant, plot)
plot <- TRUE
correl <- lets.correl(cbind(x, x, x), y, z, equidistant, plot)
correl <- lets.correl(cbind(x, x), y, z, equidistant, plot)
correl <- lets.correl(cbind(x, sample(x), sample(x)), y, z, equidistant, plot)
correl <- lets.correl(cbind(x, sample(x), sample(x)), y, z, equidistant, plot)
N <- 5
x <- rnorm(nrow(PAM[[1]]))[1:N]
y <- rdist.earth(PAM[[1]][1:N, 1:2])
z <- 50
equidistant <- TRUE
plot <- TRUE
correl <- lets.correl(cbind(x, sample(x), sample(x)), y, z, equidistant, plot)
N <- 500
x <- rnorm(nrow(PAM[[1]]))[1:N]
y <- rdist.earth(PAM[[1]][1:N, 1:2])
z <- 50
equidistant <- TRUE
plot <- TRUE
correl <- lets.correl(cbind(x, sample(x), sample(x)), y, z, equidistant, plot)
is.dist(y)
y <- lets.distmat(PAM[[1]][1:N, 1:2])
y
class(y)
distan <- matrix(runif(1000), ncol = 100, nrow = 100)
diag(distan) <- 0
ind <- lower.tri(distan)
distan[ind] <- t(distan)[ind]
distan[lower.tri(distan)] <- distan[upper.tri(distan)]
distan2 <- as.matrix(dist(var))
distan <- (distan)*(distan2)
moran <- lets.correl(var, distan, 10, equidistant = FALSE,
plot = TRUE)
distan <- matrix(runif(1000), ncol = 100, nrow = 100)
diag(distan) <- 0
ind <- lower.tri(distan)
distan[ind] <- t(distan)[ind]
distan[lower.tri(distan)] <- distan[upper.tri(distan)]
distan2 <- as.matrix(dist(var))
var
var <- runif(100)  # random variable
distan2 <- as.matrix(dist(var))
distan <- (distan)*(distan2)
moran <- lets.correl(var, distan, 10, equidistant = FALSE,
plot = TRUE)
moran
data(PAM)
data(IUCN)
midpoint <- lets.midpoint(PAM)
midpoint
distan <- lets.distmat(midpoint[, 2:3])
distan
IUCN
head(IUCN)
moran <- lets.correl(IUCN$Description_Year, distan, 10,
equidistant = FALSE, plot = TRUE)
library(letsR)
data(PAM)
data(IUCN)
# Correlated distance matrix
midpoint <- lets.midpoint(PAM)
distan <- lets.distmat(midpoint[, 2:3])
moran <- lets.correl(IUCN$Description_Year, distan, 10,
equidistant = FALSE, plot = TRUE)
data(PAM)
data(IUCN)
# Correlated distance matrix
midpoint <- lets.midpoint(PAM)
distan <- lets.distmat(midpoint[, 2:3])
moran <- lets.correl(IUCN$Description_Year, distan, 10,
equidistant = FALSE, plot = TRUE)
moran <- lets.correl(IUCN$Description_Year, distan, 10,
equidistant = TRUE, plot = TRUE)
moran <- lets.correl(IUCN$Description_Year, distan, 30,
equidistant = TRUE, plot = TRUE)
moran <- lets.correl(IUCN$Description_Year, distan, 5,
equidistant = TRUE, plot = TRUE)
IUCN$Status
moran <- lets.correl(IUCN$Status, distan, 5,
equidistant = TRUE, plot = TRUE)
lets.iucncont(IUCN$Status)
risk <- lets.iucncont(IUCN$Status, DD = -1, NE = -2)
risk <- lets.iucncont(IUCN$Status, dd = -1, ne = -2)
moran <- lets.correl(IUCN$Status, distan, 5,
moran <- lets.correl(risk, distan, 5,
equidistant = TRUE,
plot = TRUE)
moran <- lets.correl(risk, distan, 5,
equidistant = TRUE,
plot = TRUE)
moran <- lets.correl(risk, distan, 10,
equidistant = TRUE,
plot = TRUE)
moran
risk <- lets.iucncont(IUCN$Status, dd = -1, ne = -1)
moran <- lets.correl(risk, distan, 10,
equidistant = TRUE,
plot = TRUE)
risk <- lets.iucncont(IUCN$Status, dd = -1, ne = -1)
moran <- lets.correl(risk, distan, 10,
equidistant = TRUE,
plot = TRUE)
risk <- lets.iucncont(IUCN$Status, dd = 5)
moran <- lets.correl(risk, distan, 10,
equidistant = TRUE,
plot = TRUE)
risk <- lets.iucncont(IUCN$Status, dd = 4)
moran <- lets.correl(risk, distan, 10,
equidistant = TRUE,
plot = TRUE)
risk <- lets.iucncont(IUCN$Status, dd = 3)
moran <- lets.correl(risk, distan, 10,
equidistant = TRUE,
plot = TRUE)
risk <- lets.iucncont(IUCN$Status, dd = 2)
moran <- lets.correl(risk, distan, 10,
equidistant = TRUE,
plot = TRUE)
risk <- lets.iucncont(IUCN$Status, dd = 1)
moran <- lets.correl(risk, distan, 10,
equidistant = TRUE,
plot = TRUE)
risk <- lets.iucncont(IUCN$Status, dd = 0)
moran <- lets.correl(risk, distan, 10,
equidistant = TRUE,
plot = TRUE)
moran <- lets.correl(IUCN$Description, distan, 10,
equidistant = TRUE,
plot = TRUE)
moran <- lets.correl(IUCN$Description, distan, 10,
equidistant = TRUE,
plot = TRUE)
moran
moran <- lets.correl(IUCN$Description, distan, 13,
equidistant = TRUE,
plot = TRUE)
moran
moran <- lets.correl(IUCN$Description, distan, 20,
equidistant = TRUE,
plot = TRUE)
moran <- lets.correl(IUCN$Description, distan, 15,
equidistant = TRUE,
plot = TRUE)
moran
moran <- lets.correl(IUCN$Description, distan, 15,
equidistant = FALSE,
plot = TRUE)
moran
moran <- lets.correl(IUCN$Description, distan, 10,
equidistant = FALSE,
plot = TRUE)
moran <- lets.correl(IUCN$Description, distan, 5,
equidistant = FALSE,
plot = TRUE)
moran <- lets.correl(IUCN$Description, distan, 7,
equidistant = FALSE,
plot = TRUE)
moran <- lets.correl(IUCN$Description, distan, 6,
equidistant = FALSE,
plot = TRUE)
moran
?lets.overlap
distan <- lets.overlap(PAM, "Cells")
moran <- lets.correl(IUCN$Description, distan, 6,
equidistant = FALSE,
plot = TRUE)
moran <- lets.correl(IUCN$Description, distan, 5,
equidistant = TRUE,
plot = TRUE)
distan <- 1 - lets.overlap(PAM)
moran <- lets.correl(IUCN$Description, distan, 5,
equidistant = TRUE,
plot = TRUE)
moran <- lets.correl(IUCN$Description, distan, 10,
equidistant = TRUE,
plot = TRUE)
moran <- lets.correl(IUCN$Description, distan, 10,
equidistant = FALSE,
plot = TRUE)
moran <- lets.correl(IUCN$Description, distan, 10,
equidistant = TRUE,
plot = TRUE)
moran <- lets.correl(IUCN$Description, distan, 6,
equidistant = FALSE,
plot = TRUE)
midpoint <- lets.midpoint(PAM)
distan <- lets.distmat(midpoint[, 2:3])
moran <- lets.correl(IUCN$Description, distan, 6,
equidistant = FALSE,
plot = TRUE)
moran <- lets.correl(IUCN$Description, distan, 12,
equidistant = FALSE,
plot = TRUE)
# Spatial autocorrelation in description year (species level)
midpoint <- lets.midpoint(PAM)
distan <- lets.distmat(midpoint[, 2:3])
moran <- lets.correl(IUCN$Description, distan, 12,
equidistant = FALSE,
plot = TRUE)
library(letsR)
?lets.correl
data(PAM)
data(IUCN)
# Spatial autocorrelation in description year (species level)
midpoint <- lets.midpoint(PAM)
distan <- lets.distmat(midpoint[, 2:3])
moran <- lets.correl(IUCN$Description, distan, 12,
equidistant = FALSE,
plot = TRUE)
moran
head(moran)
class(moran)
library(testhat)
library(testthat)
N <- 100
x <- rnorm(nrow(PAM[[1]]))[1:N]
y <- lets.distmat(PAM[[1]][1:N, 1:2])
z <- 100
equidistant <- TRUE
plot <- TRUE
correl <- lets.correl(x, y, z, equidistant, plot)
expect_true(class(correl) == "matrix")
expect_true(all(!is.na(correl)))
N <- 10
x <- rnorm(nrow(PAM[[1]]))[1:N]
y <- lets.distmat(PAM[[1]][1:N, 1:2])
z <- 100
equidistant <- TRUE
plot <- TRUE
correl <- lets.correl(x, y, z, equidistant, plot)
expect_true(class(correl) == "matrix")
expect_true(all(!is.na(correl)))
N <- 5
x <- rnorm(nrow(PAM[[1]]))[1:N]
y <- lets.distmat(PAM[[1]][1:N, 1:2])
z <- 100
equidistant <- TRUE
plot <- TRUE
N <- 100
x <- rnorm(nrow(PAM[[1]]))[1:N]
y <- lets.distmat(PAM[[1]][1:N, 1:2])
z <- 10
correl <- lets.correl(x, y, z, equidistant, plot)
expect_true(class(correl) == "matrix")
expect_true(all(!is.na(correl)))
correl <- lets.correl(x, y, z, equidistant = TRUE, plot)
expect_true(class(correl) == "matrix")
expect_true(all(!is.na(correl)))
correl <- lets.correl(x, y, z, plot = FALSE)
source('~/.active-rstudio-document', echo=TRUE)
correl <- lets.correl(x, y, z, plot = FALSE)
correl
expect_true(class(correl) == "matrix")
expect_true(all(!is.na(correl)))
correl <- lets.correl(x, as.matrix(y), z, plot = FALSE)
expect_true(class(correl) == "matrix")
expect_true(all(!is.na(correl)))
correl <- lets.correl(cbind(x, sample(x)), y, z, plot = FALSE)
correl <- lets.correl(cbind(x, sample(x)), y, z, plot)
correl
N <- 2
x <- rnorm(nrow(PAM[[1]]))[1:N]
y <- lets.distmat(PAM[[1]][1:N, 1:2])
expect_error(lets.correl(x, y, z, plot))
lets.correl(x, y, z, plot)
library(letsR)
?letsR
??letsR
data(PAM)
data(Phyllomedusa)
library(testhat)
library(testthat)
resu_test <- lets.rangesize(x = Phyllomedusa,
coordinates = "geographic")
expect_equal(class(resu_test), "matrix")
expect_true(ncol(resu_test) == 1)
expect_true(!any(is.na(resu_test)))
resu_test <- lets.rangesize(x = Phyllomedusa,
coordinates = "planar")
expect_equal(class(resu_test), "matrix")
expect_true(ncol(resu_test) == 1)
expect_true(!any(is.na(resu_test)))
resu_test <- lets.rangesize(x = PAM,
units = "squaremeter")
expect_equal(class(resu_test), "matrix")
expect_true(ncol(resu_test) == 1)
expect_true(!any(is.na(resu_test)))
resu_test <- lets.rangesize(x = PAM,
units = "cell")
expect_equal(class(resu_test), "matrix")
expect_true(ncol(resu_test) == 1)
expect_true(!any(is.na(resu_test)))
library(letsR)
data(PAM)
data(Phyllomedusa)
library(testthat)
resu_test <- lets.rangesize(x = Phyllomedusa,
coordinates = "geographic")
expect_equal(class(resu_test), "matrix")
expect_true(ncol(resu_test) == 1)
expect_true(!any(is.na(resu_test)))
resu_test <- lets.rangesize(x = Phyllomedusa,
coordinates = "planar")
expect_equal(class(resu_test), "matrix")
expect_true(ncol(resu_test) == 1)
expect_true(!any(is.na(resu_test)))
resu_test <- lets.rangesize(x = PAM,
units = "squaremeter")
expect_equal(class(resu_test), "matrix")
expect_true(ncol(resu_test) == 1)
expect_true(!any(is.na(resu_test)))
resu_test <- lets.rangesize(x = PAM,
units = "cell")
expect_equal(class(resu_test), "matrix")
expect_true(ncol(resu_test) == 1)
expect_true(!any(is.na(resu_test)))
PAM2 <- lets.presab(Phyllomedusa, res = 5)
resu_test <- lets.rangesize(x = PAM2,
units = "squaremeter")
expect_equal(class(resu_test), "matrix")
expect_true(ncol(resu_test) == 1)
expect_true(!any(is.na(resu_test)))
expect_error(lets.rangesize(x = PAM, units = "cells"))
expect_error(lets.rangesize(x = Phyllomedusa, coordinates = "cells"))
data(PAM)
data(IUCN)
# Spatial autocorrelation in description year (species level)
midpoint <- lets.midpoint(PAM)
distan <- lets.distmat(midpoint[, 2:3])
moran <- lets.correl(IUCN$Description, distan, 12,
equidistant = FALSE,
plot = TRUE)
moran
data(PAM)
data(IUCN)
# Spatial autocorrelation in description year (species level)
midpoint <- lets.midpoint(PAM)
distan <- lets.distmat(midpoint[, 2:3])
moran <- lets.correl(cbind(IUCN$Description, IUCN$Description), distan, 12,
equidistant = FALSE,
plot = TRUE)
moran
library(letsR)
data(PAM)
data(IUCN)
# Spatial autocorrelation in description year (species level)
midpoint <- lets.midpoint(PAM)
distan <- lets.distmat(midpoint[, 2:3])
moran <- lets.correl(IUCN$Description, distan, 12,
equidistant = FALSE,
plot = TRUE)
library(letsR)
data(PAM)
data(IUCN)
# Spatial autocorrelation in description year (species level)
midpoint <- lets.midpoint(PAM)
distan <- lets.distmat(midpoint[, 2:3])
moran <- lets.correl(IUCN$Description, distan, 12,
equidistant = FALSE,
plot = TRUE)
data(PAM)
data(IUCN)
# Spatial autocorrelation in description year (species level)
midpoint <- lets.midpoint(PAM)
distan <- lets.distmat(midpoint[, 2:3])
moran <- lets.correl(IUCN$Description, distan, 12,
equidistant = FALSE,
plot = TRUE)
data(PAM)
data(IUCN)
# Spatial autocorrelation in description year (species level)
midpoint <- lets.midpoint(PAM)
distan <- lets.distmat(midpoint[, 2:3])
moran <- lets.correl(cbind(IUCN$Description, IUCN$Description), distan, 12,
equidistant = FALSE,
plot = TRUE)
data(PAM)
data(IUCN)
# Spatial autocorrelation in description year (species level)
midpoint <- lets.midpoint(PAM)
distan <- lets.distmat(midpoint[, 2:3])
moran <- lets.correl(cbind(IUCN$Description, sample(IUCN$Description)), distan, 12,
equidistant = FALSE,
plot = TRUE)
data(PAM)
range <- lets.rangesize(x = PAM, units = "cell")
field <- lets.field(PAM, range, PAM$S)
expect_equal(class(field), "data.frame")
expect_true(ncol(field) == 2)
expect_true(nrow(field) == length(PAM$S))
field <- lets.field(PAM, range, PAM$S, weigth = FALSE)
field <- lets.field(PAM, range, PAM$S, weight = FALSE)
data(PAM)
data(Phyllomedusa)
resu_test <- lets.rangesize(x = Phyllomedusa,
coordinates = "geographic")
expect_equal(class(resu_test), "matrix")
expect_true(ncol(resu_test) == 1)
expect_true(!any(is.na(resu_test)))
resu_test <- lets.rangesize(x = Phyllomedusa,
coordinates = "planar")
expect_equal(class(resu_test), "matrix")
expect_true(ncol(resu_test) == 1)
expect_true(!any(is.na(resu_test)))
resu_test <- lets.rangesize(x = PAM,
units = "squaremeter")
expect_equal(class(resu_test), "matrix")
expect_true(ncol(resu_test) == 1)
expect_true(!any(is.na(resu_test)))
resu_test <- lets.rangesize(x = PAM,
units = "cell")
expect_equal(class(resu_test), "matrix")
expect_true(ncol(resu_test) == 1)
expect_true(!any(is.na(resu_test)))
Phyllomedusa
projection(Phyllomedusa) <- projection(PAM)
Phyllomedusa
projection(Phyllomedusa) <- projection(PAM[[2]])
Phyllomedusa
resu_test <- lets.rangesize(x = Phyllomedusa,
coordinates = "geographic")
expect_equal(class(resu_test), "matrix")
expect_true(ncol(resu_test) == 1)
expect_true(!any(is.na(resu_test)))
resu_test
