?letsR-package
?"letsR-package"
library(letsR)
?lestR
?letsR
library(letsR)
?letsR
library(github)
library(devtools)
?install_github
library(raster)
library(maptools)
library(maps)
library(XML)
library(geosphere)
library(devtools)
library(letsR)
?lets.presab
data(Phyllomedusa)  # Spatial distribution polygons of south american frogs of genus Phyllomedusa.
system.time(PAM <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15))
summary(PAM)
plot(PAM)  # Species richness map
plot(PAM, name="Phyllomedusa nordestina")  # Map of the specific species
plot(PAM, name="Phyllomedusa nordestina", main="Phyllomedusa nordestina")  # Map of the specific species
plot(PAM, main="Species Richness")  # Species richness map
plot(PAM, name="Phyllomedusa nordestina", main="Phyllomedusa nordestina")  # Map of the specific species
plot(PAM, main="Species Richness")  # Species richness map
system.time(PAM <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15), res=2)
system.time(PAM <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15), resolution=2)
?lets.presab
system.time(PAM <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15), resol=2)
system.time(PAM <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15, resol=2))
summary(PAM)
plot(PAM, main="Species Richness")  # Species richness map
plot(PAM, name="Phyllomedusa nordestina", main="Phyllomedusa nordestina")  # Map of the specific species
plot(PAM, main="Species Richness")  # Species richness map
system.time(PAM <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15, resol=0.1))
system.time(PAM <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15, resol=0.2))
system.time(PAM <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15, resol=0.2, count=TRUE))
system.time(PAM <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15, resol=0.5, count=TRUE))
plot(PAM, main="Species Richness")  # Species richness map
plot(PAM, name="Phyllomedusa nordestina", main="Phyllomedusa nordestina")  # Map of the specific species
plot(PAM, main="Species Richness")  # Species richness map
setwd("C:/Users/Bruno/Desktop")
sp <- read.table("species.txt", header=T)
head(sp)
nomes <- read.table("list.txt", header=T)
nomes
as.vector(nomes)
sp2 <- sp[, nomes]
as.character(nomes)
as.numeric(nomes)
sp2 <- sp[, as.factor(nomes)]
as.factor(nomes)
dim(sp)
class(sp)
sp$nomes
nomes
class(nomes)
as.numeric(nomes)
as.factors(nomes)
as.factor(nomes)
factor(nomes)
nomes <- read.table("list.txt")
nomes
nomes <- read.table("list.txt", header=T)
nomes$list
sp2 <- sp[, nomes$list]
sp2
head(sp2)
dim(sp2)
length(nomes)
dim(nomes)
?write.table
setwd("C:/Users/Bruno/Desktop")
sp <- read.table("species.txt", header=T)
nomes <- read.table("list.txt", header=T)
resultado <- sp[, nomes$list]
write.table(resltado, "resultado.txt", row.names=F, sep="\t")
write.table(resultado, "resultado.txt", row.names=F, sep="\t")
head(resultado)
class(resultado)
write.table(resultado, "resultado.txt", row.names=F)
?list.files
setwd("C:/Users/Bruno/Desktop") # muda para o caminho onde estiver seus arquivos
sp <- read.table("species.txt", header=T)
nomes <- read.table("list.txt", header=T)
resultado <- sp[, nomes$list]
head(resultado)
colnames(resultado)==nomes$list
resultado%in%nomes$list
colnames(resultado)%in%nomes$list
colnames(sp)%in%nomes$list
resultado <- sp[, colnames(sp)%in%nomes$list]
colnames(resultado)%in%nomes$list
library(raster)
library(maptools)
library(maps)
library(XML)
library(geosphere)
library(letsR)
?gsub
?raster
library(letsR)
?gsub
data(Phyllomedusa)
Phyllomedusa
names(Phyllomedusa)
Phyllomedusa$source
Phyllomedusa$citation
names(Phyllomedusa)
Phyllomedusa$year
Phyllomedusa$id_no
Phyllomedusa$tax_comm
Phyllomedusa$compiler
Phyllomedusa$legend
Phyllomedusa$citation
names(Phyllomedusa)
Phyllomedusa$source
levels(Phyllomedusa$source)
Phyllomedusa[,-"Source"]
names(Phyllomedusa)
names(Phyllomedusa[,-8])
Phyllomedusa <- Phyllomedusa[,-8]
?save
save(Phyllomedusa, file="Phyllomedusa.rda")
getwd
getwd()
R CMD build --resave-data
save(Phyllomedusa, file="Phyllomedusa.rda", compress="xz")
library(letsR)
data(Phyllomedusa)
Phyllomedusa
names(Phyllomedusa)
levels(Phyllomedusa$legend)
levels(Phyllomedusa$compiler)
levels(Phyllomedusa$tax_comm)
names(Phyllomedusa)
Phyllomedusa <- Phyllomedusa[,-14]
save(Phyllomedusa, file="Phyllomedusa.rda", compress="xz")
library(letsR)
data(Phyllomedusa)
names(Phyllomedusa)
levels(Phyllomedusa$citation)
names(Phyllomedusa)
Phyllomedusa <- Phyllomedusa[,-c(1,5,6,7,8,9,10,11,12)]
Phyllomedusa
plot(Phyllomedusa)
save(Phyllomedusa, file="Phyllomedusa.rda", compress="xz")
library(letsR)
library(letsR)
lets.presab
?lets.presab
library(letsR)
library(raster)
library(maptools)
library(maps)
library(XML)
library(geosphere)
?lets.presab
data(Phyllomedusa)  # Spatial distribution polygons of south american frogs of genus Phyllomedusa.
PAM <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15)
summary(PAM)
plot(PAM)  # Species richness map
plot(PAM, name="Phyllomedusa nordestina")  # Map of the specific species
plot(PAM)
?CRS
?SpatialPolygon
?SpatialPolygons
library(letsR)
library(letsR)
?resaveRdaFiles()
resaveRdaFiles()
library(letsR)
?letsR
library(letsR)
?plot
?plot.PresenceAbsence
library(letsR)
?plot.PresenceAbsence
library(letsR)
library(letsR)
library(letsR)
library(letsR)
data(Phyllomedusa)
Phyllomedusa
levels(Phyllomedusa@binomial)
levels(Phyllomedusa$binomial)
sum(!duplicated(Phyllomedusa$binomial))
data(PAM)
length(PAM$S)
Phyllomedusa
library(letsR)
?Phyllomedusa
library(letsR)
?Phyllomedusa
library(letsR)
?Phyllomedusa
library(letsR)
?PAM
?PAM
library(letsR)
library(letsR)
library(letsR)
?PAM
data(temp)
temp
data(IUCN)
IUCN
iucn
library(letsR)
data(iucn)
head(iucn)
library(letsR)
library(letsR)
R CMD Rd2pdf mypackage
rm -rf C:/Users/Bruno/AppData/Local/Temp/RtmpCI7NTw/Rd2pdf141c69db3744
rm -rf C:/Users/Bruno/AppData/Local/Temp/RtmpCI7NTw/Rd2pdf141c69db3744
R CMD Rd2pdf mypackage
"R CMD Rd2pdf mypackage"
?"R CMD Rd2pdf mypackage"
install.packages(debiandoc-sgml)
install.packages("debiandoc-sgml")
library(letsR)
install.packages("LaTeX ")
install.packages("LaTeX")
install.packages("letsR")
library(letsR)
?letsR
?install.packages
library(letsR)
install.package("testthat")
install.packages("testthat")
context("lets.presab")
library(testthat)
context("lets.presab")
?lets.presab
library(letsR)
?lets.presab
test_that("pbdb_occurrence output is a dataframe, and the names are characters", {
data(Phyllomedusa)  # Spatial distribution polygons of south american frogs of genus Phyllomedusa.
response <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15)
expect_is (response, "PresenceAbsence")
})
?test_that
test_that("trigonometric functions match identities", {
expect_that(sin(pi / 4), equals(1))
})
test_that("trigonometric functions match identities", {
expect_that(sin(pi / 4), equals(1 / sqrt(2)))
expect_that(cos(pi / 4), equals(1 / sqrt(2)))
expect_that(tan(pi / 4), equals(1))
})
response
data(PAM)
is.carachter(PAM$S)
is.character(PAM$S)
israster(PAM$R)
is.matrix(PAM$M)
is.data.frame(PAM$M)
class(PAM$M)
class(PAM$P)
context("lets.presab")
test_that("pbdb_occurrence output is a dataframe, and the names are characters", {
data(Phyllomedusa)  # Spatial distribution polygons of south american frogs of genus Phyllomedusa.
response <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15)
expect_is (response, "PresenceAbsence")
expect_true (length(response)==3)
expect_true (is.character(response$S))
expect_is (response$R, "raster")
expect_true(is.matrix(response$P))
})
context("lets.presab")
test_that("pbdb_occurrence output is a dataframe, and the names are characters", {
response <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15)
expect_is (response, "PresenceAbsence")
expect_true (length(response)==3)
expect_true (is.character(response$S))
expect_is (response$R, "RasterLayer")
expect_true(is.matrix(response$P))
})
?plot.PresenceAbsence
install.packages("letsR")
?x11
?dev.new()
dev.new(2, 2, pointsize = 12)
dev.new()
dev.new(10)
dev.new(plot(1:2, 2:3))
plot(1:2, 2:3)
x11()
dev.new()
dev.new()
dev.new(2, 2, pointsize = 12)
dev.new()
plot(1:10, 1:10, main=)
dev.new() plot(1:10, 1:10)
dev.new(); plot(1:10, 1:10)
options(device = "windows")
dev.new(); plot(1:10, 1:10)
dev.new(2, 2, pointsize = 12)
#' Shapefiles into a presence-absence matrix
#'
#' @author Bruno Vilela & Fabricio Villalobos
#'
#' @description Convert species shapefiles into a presence-absence matrix.
#'
#' @usage lets.presab(shapes, xmn=-180, xmx=180, ymn=-90, ymx=90, resol=1,
#' remove.cells=TRUE, remove.sp=TRUE, show.matrix=FALSE,
#' crs=CRS("+proj=longlat +datum=WGS84"), cover=0, presence=NULL,
#' origin=NULL, seasonal=NULL, count=FALSE)
#'
#' @param shapes Object of class SpatialPolygonsDataFrame (see function \code{\link{readShapePoly}} to open these files). Species name should be in a column (within the .DBF table of the shapefile) called BINOMIAL or binomial.
#' @param xmx Maximun longitude used to construct the grid in which the matrix will be based (i.e. the [gridded] geographic domain of interest)
#' @param xmn Minimun longitude used to construct the grid in which the matrix will be based (i.e. the [gridded] geographic domain of interest)
#' @param ymx Maximun latitude used to construct the grid in which the matrix will be based (i.e. the [gridded] geographic domain of interest)
#' @param ymn Minimun latitude used to construct the grid in which the matrix will be based (i.e. the [gridded] geographic domain of interest)
#' @param resol Numeric vector of length 1 or 2 to set the grid resolution.
#' @param remove.cells Logical, if \code{TRUE} the final matrix will not contain cells in the grid with a value of zero (i.e. sites with no species present).
#' @param remove.sp Logical, if \code{TRUE} the final matrix will not contain species that do not match any cell in the grid.
#' @param show.matrix Logical, if \code{TRUE} only the presence-absence matrix will be shown.
#' @param crs Character representign the PROJ.4 type description of a Coordinate Reference System (map projection).
#' @param cover Porcentage of the cell covered by the shapefile that will be considered for presence (values between 0 and 1).
#' @param presence A vector with the code numbers for the presence type to be considered in the process (for IUCN spatial data \url{http://www.iucnredlist.org/technical-documents/spatial-data}).
#' @param origin A vector with the code numbers for the origin type to be considered in the process (for IUCN spatial data).
#' @param seasonal A vector with the code numbers for the seasonal type to be considered in the process (for IUCN spatial data).
#' @param count Logical, if \code{TRUE} a counting window will open.
#'
#'
#' @return The result is an object of class PresenceAbsence with the following objects:
#' @return \strong{Presence-Absence Matrix}: A matrix of species' presence(1) and absence(0) information. The first two columns contain the longitude (x) and latitude (y) of the cells' centroid (from the gridded domain used);
#' @return \strong{Richness Raster}: A raster containing species richness data;
#' @return \strong{Species name}: A vector with species' names contained in the matrix.
#' @return *But see the option argument \code{show.matrix}.
#'
#'
#' @details The function creates the presence-absence matrix based on a raster file. Depending on the cell size, extension used and number of species it may require a lot of memory,
#'and may take some time to process it. Thus, during the process, if \code{count} argument is set \code{TRUE}, a counting window will open so you can see the progress (i.e. in what polygon the function is working). Note that the number of
#'polygons is not the same as the number of species that you have (i.e. a species may have more than one polygon/shapefiles).
#'
#' @seealso \code{\link{plot.PresenceAbsence}}
#' @seealso \code{\link{lets.presab.birds}}
#' @seealso \code{\link{lets.shFilter}}
#'
#' @examples \dontrun{
#' data(Phyllomedusa)  # Spatial distribution polygons of south american frogs of genus Phyllomedusa.
#' PAM <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15)
#' summary(PAM)
#' plot(PAM)  # Species richness map
#' plot(PAM, name="Phyllomedusa nordestina")  # Map of the specific species
#' }
#'
#'
#' @import raster
#' @import maptools
#' @import maps
#' @import sp
#'
#'
#' @export
lets.presab <- function(shapes, xmn=-180, xmx=180, ymn=-90,
ymx=90, resol=1, remove.cells=TRUE,
remove.sp=TRUE, show.matrix=FALSE,
crs=CRS("+proj=longlat +datum=WGS84"),
cover=0, presence=NULL, origin=NULL,
seasonal=NULL, count=FALSE){
if(!all(is.null(presence), is.null(origin), is.null(seasonal))){
shapes <- lets.shFilter(shapes, presence=presence, origin=origin, seasonal=seasonal)
}
if(is.null(shapes)){
stop("after filtering none species distribution left")
}
ras <- raster(xmn=xmn, xmx=xmx, ymn=ymn, ymx=ymx, crs=crs)
res(ras) <- resol
values(ras) <- 1
coord <- xyFromCell(ras, 1:length(values(ras)))
colnames(coord) <- c("Longitude(x)", "Latitude(y)")
if(any(names(shapes)=="BINOMIAL")){
nomes <- levels(shapes$BINOMIAL)
n <- length(shapes$BINOMIAL)
nomes2 <- shapes$BINOMIAL
}
if(any(names(shapes)=="binomial")){
nomes <- levels(shapes$binomial)
n <- length(shapes$binomial)
nomes2 <- shapes$binomial
}
matriz <- matrix(0, ncol=length(nomes), nrow=length(values(ras)))
colnames(matriz) <- nomes
if(count == TRUE){
dev.new(2, 2, pointsize = 12)
par(mar=c(0, 0, 0, 0))
for(i in 1:n){
plot.new()
text(0.5, 0.5, paste(paste("Total:", n, "\n","Runs to go: ", (n-i))))
celulas <- extract(ras, SpatialPolygons(list(shapes@polygons[[i]])), cellnumbers=T, weights=T, small=T)
pos <- which(nomes2[i]==nomes)
pos2 <- do.call(rbind.data.frame, celulas)
pos2 <- pos2[which(pos2[,3]>=cover), ]
matriz[pos2[, 1], pos] <- 1
}
dev.off()
}
if(count == FALSE){
for(i in 1:n){
celulas <- extract(ras, SpatialPolygons(list(shapes@polygons[[i]])), cellnumbers=T, weights=T, small=T)
pos <- which(nomes2[i]==nomes)
pos2 <- do.call(rbind.data.frame, celulas)
pos2 <- pos2[which(pos2[,3]>=cover), ]
matriz[pos2[, 1], pos] <- 1
}
}
cbind(coord,matriz)->Resultado
if(remove.cells==TRUE){
Resultado <- .removeCells(Resultado)
}
if(remove.sp==TRUE){
Resultado <- .removeSp(Resultado)
}
if(show.matrix==TRUE){
return(Resultado)
}else{
values(ras) <- rowSums(matriz)
final <- list("Presence and Absence Matrix"=Resultado, "Richness Raster"=ras,
"Species name"=colnames(Resultado)[-(1:2)])
class(final) <- "PresenceAbsence"
return(final)
}
}
datadata(Phyllomedusa)  # Spatial distribution polygons of south american frogs of genus Phyllomedusa.
PAM <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15, count=TRUE)
summary(PAM)
data(Phyllomedusa)
library(raster)
library(maptools)
library(maps)
library(XML)
library(geosphere)
library(sp)
library(devtools)
PAM <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15, count=T)
library(letsR)
PAM <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15, count=T)
library(letsR)
PAM <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15, count=T)
data(Phyllomedusa)  # Spatial distribution polygons of south american frogs of genus Phyllomedusa.
library(raster)
library(maptools)
library(maps)
library(XML)
library(geosphere)
library(sp)
library(letsR)
PAM <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15, count=T)
plot(PAM)
plot(PAM, world=F)
?par
arg(dev.new)
arguments(dev.new)
args(dev.new)
dev.new
?dev
?x11
dev.new(width=2, height=2, pointsize = 12)
library(letsR)
options(device = "windows")
PAM <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15, count=T)
plot(1:10, 1:10)
dev.new(width=2, height=2, pointsize = 12)
plot(1:10, 1:10)
library(letsR)
length("# Check where is the variable name (in this case it is in "NAME" which will be my z value)")
length("Check where is the variable name (in this case it is in "NAME" which will be my z value)")
status <- sample(c("EN","VU", "NT", "CR", "DD", "LC"), 30, replace=TRUE)
TE <- "Threatened"
NT <- "Non-Threatened"
new <- c(TE, TE, NT, TE, "Data Deficient", NT)
old <- c("EN","VU", "NT", "CR", "DD", "LC")
statustrans <- lets.transf(status, old, new, NUMERIC=FALSE)
statustrans
status
library(letsR)
lets.iucn(c("Musonycteris harrisoni", "Ailuropoda melanoleuca", "Cebus flavius"), count=TRUE)
lets.iucn(c("Musonycteris harrisoni", "Ailuropoda melanoleuca", "Cebus flavius"), count=TRUE)
install.packages("letsR")
install.packages("letsR")
library(letsR)
library(letsR)
library(letsR)
library(letsR)
install.packages("letsR")
?letsR
library(letsR)
?letsR
?lets.presab
data(Phyllomedusa)  # Spatial distribution polygons of south american frogs of genus Phyllomedusa.
PAM <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15)
summary(PAM)
plot(PAM)  # Species richness map
library(maps)
plot(PAM)  # Species richness map
?lets.iucn
lets.iucn("Pongo pygmaeus")
lets.iucn(c("Musonycteris harrisoni", "Ailuropoda melanoleuca", "Cebus flavius"))
?lets.midpoint
mid <- lets.midpoint(PAM)
mid
PAM <- lets.presab(Phyllomedusa, xmn=-93, xmx=-29, ymn= -57, ymx=15, count=TRUE)
plot(PAM)
library(letsR)
?description
library(letsR)
